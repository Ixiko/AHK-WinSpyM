[Window]
WM_ACTIVATE=0x0006
WM_ACTIVATEAPP=0x001C
WM_AFXFIRST=0x0360
WM_AFXLAST=	0x037F
WM_APP=0x8000
WM_ASKCBFORMATNAME=0x030C
WM_SETTEXT=0x000C
WM_GETTEXT=0x000D
WM_GETTEXTLENGTH=0x000E
WM_SETFONT=0x0030
WM_GETFONT=0x0031
WM_GETICON=0x007F
WM_SETICON=0x0080
WM_CANCELMODE=0x001F
WM_CHILDACTIVATE=0x0022
WM_CLOSE=0x0010
WM_CREATE=0x0001
WM_DESTROY=0x0002
WM_DROPFILES=0x0233
WM_ENABLE=0x000A
WM_ENTERSIZEMOVE=0x0231
WM_EXITSIZEMOVE=0x0232
WM_MOVE=0x0003
WM_MOVING=0x0216
WM_NCCREATE=0x0081
WM_NCDESTROY=0x0082
WM_NCCALCSIZE=0x0083
WM_NCACTIVATE=0x0086
WM_QUERYOPEN=0x0013
WM_QUIT=0x0012
WM_SHOWWINDOW=0x0018
WM_SIZE=0x0005
WM_SIZING=0x0214
WM_STYLECHANGING=0x007C
WM_STYLECHANGED=0x007D
WM_WINDOWPOSCHANGING=0x0046
WM_WINDOWPOSCHANGED=0x0047
WM_CUT=0x0300
WM_COPY=0x0301
WM_PASTE=0x0302
WM_CLEAR=0x0303
WM_UNDO=0x0304
WM_RENDERFORMAT=0x0305
WM_RENDERALLFORMATS=0x0306
WM_DESTROYCLIPBOARD=0x0307
WM_DRAWCLIPBOARD=0x0308
WM_PAINTCLIPBOARD=0x0309
WM_VSCROLLCLIPBOARD=0x030A
WM_SIZECLIPBOARD=0x030B
WM_ASKCBFORMATNAME=0x030C
WM_CHANGECBCHAIN=0x030D
WM_HSCROLLCLIPBOARD=0x030E
WM_CLIPBOARDUPDATE=0x031D
WM_DDE_INITIATE=0x03E0
WM_DDE_TERMINATE=0x03E1
WM_DDE_ADVISE=0x03E2
WM_DDE_UNADVISE=0x03E3
WM_DDE_ACK=0x03E4
WM_DDE_DATA=0x03E5
WM_DDE_REQUEST=0x03E6
WM_DDE_POKE=0x03E7
WM_DDE_EXECUTE=0x03E8
WM_NEXTDLGCTL=0x0028
WM_CTLCOLORDLG=0x0136
WM_GETDLGCODE=0x0087
WM_INITDIALOG=0x0110
WM_ENTERIDLE=0x0121
WM_DWMCOMPOSITIONCHANGED=0x031E
WM_DWMNCRENDERINGCHANGED=0x031F
WM_DWMCOLORIZATIONCOLORCHANGED=0x0320
WM_DWMWINDOWMAXIMIZEDCHANGE=0x0321
WM_DWMSENDICONICTHUMBNAIL=0x0323
WM_DWMSENDICONICLIVEPREVIEWBITMAP=0x0326
WM_IME_STARTCOMPOSITION=0x010D
WM_IME_ENDCOMPOSITION=0x010E
WM_IME_COMPOSITION=0x010F
WM_IME_KEYLAST=0x010F
WM_IME_SETCONTEXT=0x0281
WM_IME_NOTIFY=0x0282
WM_IME_CONTROL=0x0283
WM_IME_COMPOSITIONFULL=0x0284
WM_IME_SELECT=0x0285
WM_IME_CHAR=0x0286
WM_IME_REQUEST=0x0288
WM_IME_KEYDOWN=0x0290
WM_IME_KEYUP=0x0291
WM_SETFOCUS=0x0007
WM_KILLFOCUS=0x0008
WM_APPCOMMAND=0x0319
WM_KEYDOWN=0x0100
WM_KEYUP=0x0101
WM_CHAR=0x0102
WM_DEADCHAR=0x0103
WM_SYSKEYDOWN=0x0104
WM_SYSKEYUP=0x0105
WM_SYSCHAR=0x0106
WM_SYSDEADCHAR=0x0107
WM_HOTKEY=0x0312
WM_KEYLAST=0x0109
WM_UNICHAR=0x0109
WM_SETHOTKEY=0x0032
WM_GETHOTKEY=0x0033
WM_MDICREATE=0x0220
WM_MDIDESTROY=0x0221
WM_MDIACTIVATE=0x0222
WM_MDIRESTORE=0x0223
WM_MDINEXT=0x0224
WM_MDIMAXIMIZE=0x0225
WM_MDITILE=0x0226
WM_MDICASCADE=0x0227
WM_MDIICONARRANGE=0x0228
WM_MDIGETACTIVE=0x0229
WM_MDISETMENU=0x0230
WM_MDIREFRESHMENU=0x0234
WM_COMMAND=0x0111
WM_SYSCOMMAND=0x0112
WM_INITMENU=0x0116
WM_INITMENUPOPUP=0x0117
WM_ENTERMENULOOP=0x0211
WM_EXITMENULOOP=0x0212
WM_NEXTMENU=0x0213
WM_CONTEXTMENU=0x007B
WM_MENUSELECT=0x011F
WM_MENUCHAR=0x0120
WM_MENURBUTTONUP=0x0122
WM_MENUDRAG=0x0123
WM_MENUGETOBJECT=0x0124
WM_UNINITMENUPOPUP=0x0125
WM_MENUCOMMAND=0x0126
WM_MOUSEACTIVATE=0x0021
WM_MOUSEMOVE=0x0200
WM_MOUSELEAVE=0x02A3
WM_MOUSEHOVER=0x02A1
WM_LBUTTONDOWN=0x0201
WM_LBUTTONUP=0x0202
WM_LBUTTONDBLCLK=0x0203
WM_RBUTTONDOWN=0x0204
WM_RBUTTONUP=0x0205
WM_RBUTTONDBLCLK=0x0206
WM_MBUTTONDOWN=0x0207
WM_MBUTTONUP=0x0208
WM_MBUTTONDBLCLK=0x0209
WM_XBUTTONDOWN=0x020B
WM_XBUTTONUP=0x020C
WM_XBUTTONDBLCLK=0x020D
WM_MOUSEWHEEL=0x020A
WM_MOUSEHWHEEL=0x020E
WM_CAPTURECHANGED=0x0215
WM_NCHITTEST=0x0084
WM_NCMOUSEMOVE=0x00A0
WM_NCMOUSELEAVE=0x02A2
WM_NCMOUSEHOVER=0x02A0
WM_NCLBUTTONDOWN=0x00A1
WM_NCLBUTTONUP=0x00A2
WM_NCLBUTTONDBLCLK=0x00A3
WM_NCRBUTTONDOWN=0x00A4
WM_NCRBUTTONUP=0x00A5
WM_NCRBUTTONDBLCLK=0x00A6
WM_NCMBUTTONDOWN=0x00A7
WM_NCMBUTTONUP=0x00A8
WM_NCMBUTTONDBLCLK=0x00A9
WM_NCXBUTTONDOWN=0x00AB
WM_NCXBUTTONUP=0x00AC
WM_NCXBUTTONDBLCLK=0x00AD
WM_NCUAHDRAWCAPTION=0x00AE
WM_NCUAHDRAWFRAME=0x00AF
WM_DISPLAYCHANGE=0x007E
WM_ERASEBKGND=0x0014
WM_NCPAINT=0x0085
WM_PAINT=0x000F
WM_PRINT=0x0317
WM_PRINTCLIENT=0x0318
WM_SETREDRAW=0x000B
WM_SYNCPAINT=0x0088
WM_CTLCOLORMSGBOX=0x0132
WM_CTLCOLOREDIT=0x0133
WM_CTLCOLORLISTBOX=0x0134
WM_CTLCOLORBTN=0x0135
WM_CTLCOLORSTATIC=0x0138
WM_POINTERDEVICECHANGE=0x0238
WM_POINTERDEVICEINRANGE=0x0239
WM_TOUCH=0x0240
WM_POINTERDEVICEOUTOFRANGE=0x023A
WM_NCPOINTERUPDATE=0x0241
WM_NCPOINTERDOWN=0x0242
WM_NCPOINTERUP=0x0243
WM_POINTERUPDATE=0x0245
WM_POINTERDOWN=0x0246
WM_POINTERUP=0x0247
WM_POINTERENTER=0x0249
WM_POINTERLEAVE=0x024A
WM_POINTERACTIVATE=0x024B
WM_POINTERCAPTURECHANGED=0x024C
WM_TOUCHHITTESTING=0x024D
WM_POINTERWHEEL=0x024E
WM_POINTERHWHEEL=0x024F
WM_CTLCOLORSCROLLBAR=0x0137
WM_HSCROLL=0x0114
WM_VSCROLL=0x0115
WM_SYSCOLORCHANGE=0x0015
WM_SETTINGCHANGE=0x001A
WM_WININICHANGE=0x001A
WM_DEVMODECHANGE=0x001B
WM_FONTCHANGE=0x001D
WM_TIMECHANGE=0x001E
WM_INPUTLANGCHANGEREQUEST=0x0050
WM_INPUTLANGCHANGE=0x0051
WM_USERCHANGED=0x0054
WM_DEVICECHANGE=0x0219
WM_WTSSESSION_CHANGE=0x02B1
WM_DPICHANGED=0x02E0
WM_THEMECHANGED=0x031A
WM_NULL=0x0000
WM_QUERYENDSESSION=0x0011
WM_ENDSESSION=0x0016
WM_SETCURSOR=0x0020
WM_QUEUESYNC=0x0023
WM_GETMINMAXINFO=0x0024
WM_PAINTICON=0x0026
WM_ICONERASEBKGND=0x0027
WM_SPOOLERSTATUS=0x002A
WM_DRAWITEM=0x002B
WM_MEASUREITEM=0x002C
WM_DELETEITEM=0x002D
WM_VKEYTOITEM=0x002E
WM_CHARTOITEM=0x002F
WM_QUERYDRAGICON=0x0037
WM_COMPAREITEM=0x0039
WM_GETOBJECT=0x003D
WM_COMPACTING=0x0041
WM_COMMNOTIFY=0x0044
WM_POWER=0x0048
WM_COPYDATA=0x004A
WM_CANCELJOURNAL=0x004B
WM_NOTIFY=0x004E
WM_TCARD=0x0052
WM_HELP=0x0053
WM_NOTIFYFORMAT=0x0055
WM_INPUT_DEVICE_CHANGE=0x00FE
WM_INPUT=0x00FF
WM_TIMER=0x0113
WM_GESTURE=0x0119
WM_GESTURENOTIFY=0x011A
WM_CHANGEUISTATE=0x0127
WM_UPDATEUISTATE=0x0128
WM_QUERYUISTATE=0x0129
WM_PARENTNOTIFY=0x0210
WM_POWERBROADCAST=0x0218
WM_QUERYNEWPALETTE=0x030F
WM_PALETTEISCHANGING=0x0310
WM_PALETTECHANGED=0x0311
WM_GETTITLEBARINFOEX=0x033F
WM_PENWINFIRST=0x380
WM_PENWINLAST=0x38F
WM_USER=0x0400

[Button]
BM_GETCHECK=0x00F0
BM_SETCHECK=0x00F1
BM_GETSTATE=0x00F2
BM_SETSTATE=0x00F3
BM_SETSTYLE=0x00F4
BM_CLICK=0x00F5
BM_GETIMAGE=0x00F6
BM_SETIMAGE=0x00F7
BM_SETDONTCLICK=0x00F8
BCM_GETIDEALSIZE=0x1601
BCM_SETIMAGELIST=0x1602
BCM_GETIMAGELIST=0x1603
BCM_SETTEXTMARGIN=0x1604
BCM_GETTEXTMARGIN=0x1605
BCM_SETDROPDOWNSTATE=0x1606
BCM_SETSPLITINFO=0x1607
BCM_GETSPLITINFO=0x1608
BCM_SETNOTE=0x1609
BCM_GETNOTE=0x160A
BCM_GETNOTELENGTH=0x160B
BCM_SETSHIELD=0x160C

[ComboBox]
CB_GETEDITSEL=0x0140
CB_LIMITTEXT=0x0141
CB_SETEDITSEL=0x0142
CB_ADDSTRING=0x0143
CB_DELETESTRING=0x0144
CB_DIR=0x0145
CB_GETCOUNT=0x0146
CB_GETCURSEL=0x0147
CB_GETLBTEXT=0x0148
CB_GETLBTEXTLEN=0x0149
CB_INSERTSTRING=0x014A
CB_RESETCONTENT=0x014B
CB_FINDSTRING=0x014C
CB_SELECTSTRING=0x014D
CB_SETCURSEL=0x014E
CB_SHOWDROPDOWN=0x014F
CB_GETITEMDATA=0x0150
CB_SETITEMDATA=0x0151
CB_GETDROPPEDCONTROLRECT=0x0152
CB_SETITEMHEIGHT=0x0153
CB_GETITEMHEIGHT=0x0154
CB_SETEXTENDEDUI=0x0155
CB_GETEXTENDEDUI=0x0156
CB_GETDROPPEDSTATE=0x0157
CB_FINDSTRINGEXACT=0x0158
CB_SETLOCALE=0x0159
CB_GETLOCALE=0x015A
CB_GETTOPINDEX=0x015B
CB_SETTOPINDEX=0x015C
CB_GETHORIZONTALEXTENT=0x015D
CB_SETHORIZONTALEXTENT=0x015E
CB_GETDROPPEDWIDTH=0x015F
CB_SETDROPPEDWIDTH=0x0160
CB_INITSTORAGE=0x0161
CB_MULTIPLEADDSTRING=0x0163
CB_GETCOMBOBOXINFO=0x0164
CB_SETMINVISIBLE=0x1701
CB_GETMINVISIBLE=0x1702
CB_SETCUEBANNER=0x1703
CB_GETCUEBANNER=0x1704

[SysDateTimePick32]
DTM_GETSYSTEMTIME=0x1001
DTM_SETSYSTEMTIME=0x1002
DTM_GETRANGE=0x1003
DTM_SETRANGE=0x1004
DTM_SETFORMATA=0x1005
DTM_SETMCCOLOR=0x1006
DTM_GETMCCOLOR=0x1007
DTM_GETMONTHCAL=0x1008
DTM_SETMCFONT=0x1009
DTM_GETMCFONT=0x100A
DTM_SETMCSTYLE=0x100B
DTM_GETMCSTYLE=0x100C
DTM_CLOSEMONTHCAL=0x100D
DTM_GETDATETIMEPICKERINFO=0x100E
DTM_GETIDEALSIZE=0x100F
DTM_SETFORMATW=0x1032

[Edit]
EM_GETSEL=0x00B0
EM_SETSEL=0x00B1
EM_GETRECT=0x00B2
EM_SETRECT=0x00B3
EM_SETRECTNP=0x00B4
EM_SCROLL=0x00B5
EM_LINESCROLL=0x00B6
EM_SCROLLCARET=0x00B7
EM_GETMODIFY=0x00B8
EM_SETMODIFY=0x00B9
EM_GETLINECOUNT=0x00BA
EM_LINEINDEX=0x00BB
EM_SETHANDLE=0x00BC
EM_GETHANDLE=0x00BD
EM_GETTHUMB=0x00BE
EM_LINELENGTH=0x00C1
EM_REPLACESEL=0x00C2
EM_GETLINE=0x00C4
EM_LIMITTEXT=0x00C5
EM_SETLIMITTEXT=0x00C5
EM_CANUNDO=0x00C6
EM_UNDO=0x00C7
EM_FMTLINES=0x00C8
EM_LINEFROMCHAR=0x00C9
EM_SETTABSTOPS=0x00CB
EM_SETPASSWORDCHAR=0x00CC
EM_EMPTYUNDOBUFFER=0x00CD
EM_GETFIRSTVISIBLELINE=0x00CE
EM_SETREADONLY=0x00CF
EM_SETWORDBREAKPROC=0x00D0
EM_GETWORDBREAKPROC=0x00D1
EM_GETPASSWORDCHAR=0x00D2
EM_SETMARGINS=0x00D3
EM_GETMARGINS=0x00D4
EM_GETLIMITTEXT=0x00D5
EM_POSFROMCHAR=0x00D6
EM_CHARFROMPOS=0x00D7
EM_SETIMESTATUS=0x00D8
EM_GETIMESTATUS=0x00D9
EM_SETCUEBANNER=0x1501
EM_GETCUEBANNER=0x1502
EM_SHOWBALLOONTIP=0x1503
EM_HIDEBALLOONTIP=0x1504
EM_SETHILITE=0x1505
EM_GETHILITE=0x1506

[msctls_hotkey32]
HKM_SETHOTKEY=0x0401
HKM_GETHOTKEY=0x0402
HKM_SETRULES=0x0403

[SysLink]
LM_HITTEST=0x0700
LM_GETIDEALHEIGHT=0x0701
LM_GETIDEALSIZE=0x0701
LM_SETITEM=0x0702
LM_GETITEM=0x0703

[ListBox]
LB_ADDSTRING=0x0180
LB_INSERTSTRING=0x0181
LB_DELETESTRING=0x0182
LB_SELITEMRANGEEX=0x0183
LB_RESETCONTENT=0x0184
LB_SETSEL=0x0185
LB_SETCURSEL=0x0186
LB_GETSEL=0x0187
LB_GETCURSEL=0x0188
LB_GETTEXT=0x0189
LB_GETTEXTLEN=0x018A
LB_GETCOUNT=0x018B
LB_SELECTSTRING=0x018C
LB_DIR=0x018D
LB_GETTOPINDEX=0x018E
LB_FINDSTRING=0x018F
LB_GETSELCOUNT=0x0190
LB_GETSELITEMS=0x0191
LB_SETTABSTOPS=0x0192
LB_GETHORIZONTALEXTENT=0x0193
LB_SETHORIZONTALEXTENT=0x0194
LB_SETCOLUMNWIDTH=0x0195
LB_ADDFILE=0x0196
LB_SETTOPINDEX=0x0197
LB_GETITEMRECT=0x0198
LB_GETITEMDATA=0x0199
LB_SETITEMDATA=0x019A
LB_SELITEMRANGE=0x019B
LB_SETANCHORINDEX=0x019C
LB_GETANCHORINDEX=0x019D
LB_SETCARETINDEX=0x019E
LB_GETCARETINDEX=0x019F
LB_SETITEMHEIGHT=0x01A0
LB_GETITEMHEIGHT=0x01A1
LB_FINDSTRINGEXACT=0x01A2
LB_SETLOCALE=0x01A5
LB_GETLOCALE=0x01A6
LB_SETCOUNT=0x01A7
LB_INITSTORAGE=0x01A8
LB_ITEMFROMPOINT=0x01A9
LB_MULTIPLEADDSTRING=0x01B1
LB_GETLISTBOXINFO=0x01B2

[SysListView32]
LVM_GETBKCOLOR=0x1000
LVM_SETBKCOLOR=0x1001
LVM_GETIMAGELIST=0x1002
LVM_SETIMAGELIST=0x1003
LVM_GETITEMCOUNT=0x1004
LVM_GETITEMA=0x1005
LVM_SETITEMA=0x1006
LVM_INSERTITEMA=0x1007
LVM_DELETEITEM=0x1008
LVM_DELETEALLITEMS=0x1009
LVM_GETCALLBACKMASK=0x100A
LVM_SETCALLBACKMASK=0x100B
LVM_GETNEXTITEM=0x100C
LVM_FINDITEMA=0x100D
LVM_GETITEMRECT=0x100E
LVM_SETITEMPOSITION=0x100F
LVM_GETITEMPOSITION=0x1010
LVM_GETSTRINGWIDTHA=0x1011
LVM_HITTEST=0x1012
LVM_ENSUREVISIBLE=0x1013
LVM_SCROLL=0x1014
LVM_REDRAWITEMS=0x1015
LVM_ARRANGE=0x1016
LVM_EDITLABELA=0x1017
LVM_GETEDITCONTROL=0x1018
LVM_GETCOLUMNA=0x1019
LVM_INSERTCOLUMNA=0x1019
LVM_SETCOLUMNA=0x101A
LVM_DELETECOLUMN=0x101C
LVM_GETCOLUMNWIDTH=0x101D
LVM_SETCOLUMNWIDTH=0x101E
LVM_GETHEADER=0x101F
LVM_CREATEDRAGIMAGE=0x1021
LVM_GETVIEWRECT=0x1022
LVM_GETTEXTCOLOR=0x1023
LVM_SETTEXTCOLOR=0x1024
LVM_GETTEXTBKCOLOR=0x1025
LVM_SETTEXTBKCOLOR=0x1026
LVM_GETTOPINDEX=0x1027
LVM_GETCOUNTPERPAGE=0x1028
LVM_GETORIGIN=0x1029
LVM_UPDATE=0x102A
LVM_SETITEMSTATE=0x102B
LVM_GETITEMSTATE=0x102C
LVM_GETITEMTEXTA=0x102D
LVM_SETITEMTEXTA=0x102E
LVM_SETITEMCOUNT=0x102F
LVM_SORTITEMS=0x1030
LVM_SETITEMPOSITION32=0x1031
LVM_GETSELECTEDCOUNT=0x1032
LVM_GETITEMSPACING=0x1033
LVM_GETISEARCHSTRINGA=0x1034
LVM_SETICONSPACING=0x1035
LVM_SETEXTENDEDLISTVIEWSTYLE=0x1036
LVM_GETEXTENDEDLISTVIEWSTYLE=0x1037
LVM_GETSUBITEMRECT=0x1038
LVM_SUBITEMHITTEST=0x1039
LVM_SETCOLUMNORDERARRAY=0x103A
LVM_GETCOLUMNORDERARRAY=0x103B
LVM_SETHOTITEM=0x103C
LVM_GETHOTITEM=0x103D
LVM_SETHOTCURSOR=0x103E
LVM_GETHOTCURSOR=0x103F
LVM_APPROXIMATEVIEWRECT=0x1040
LVM_SETWORKAREAS=0x1041
LVM_GETSELECTIONMARK=0x1042
LVM_SETSELECTIONMARK=0x1043
LVM_SETBKIMAGEA=0x1044
LVM_GETBKIMAGEA=0x1045
LVM_GETWORKAREAS=0x1046
LVM_SETHOVERTIME=0x1047
LVM_GETHOVERTIME=0x1048
LVM_GETNUMBEROFWORKAREAS=0x1049
LVM_SETTOOLTIPS=0x104A
LVM_GETITEMW=0x104B
LVM_SETITEMW=0x104C
LVM_INSERTITEMW=0x104D
LVM_GETTOOLTIPS=0x104E
LVM_SORTITEMSEX=0x1051
LVM_FINDITEMW=0x1053
LVM_GETSTRINGWIDTHW=0x1057
LVM_GETGROUPSTATE=0x105C
LVM_GETFOCUSEDGROUP=0x105D
LVM_GETCOLUMNW=0x105F
LVM_SETCOLUMNW=0x1060
LVM_INSERTCOLUMNW=0x1061
LVM_GETGROUPRECT=0x1062
LVM_GETITEMTEXTW=0x1073
LVM_SETITEMTEXTW=0x1074
LVM_GETISEARCHSTRINGW=0x1075
LVM_EDITLABELW=0x1076
LVM_SETBKIMAGEW=0x108A
LVM_GETBKIMAGEW=0x108B
LVM_SETVIEW=0x108E
LVM_GETVIEW=0x108F
LVM_INSERTGROUP=0x1091
LVM_SETGROUPINFO=0x1093
LVM_GETGROUPINFO=0x1095
LVM_REMOVEGROUP=0x1096
LVM_MOVEGROUP=0x1097
LVM_GETGROUPCOUNT=0x1098
LVM_GETGROUPINFOBYINDEX=0x1099
LVM_MOVEITEMTOGROUP=0x109A
LVM_SETGROUPMETRICS=0x109B
LVM_GETGROUPMETRICS=0x109C
LVM_ENABLEGROUPVIEW=0x109D
LVM_SORTGROUPS=0x109E
LVM_INSERTGROUPSORTED=0x109F
LVM_REMOVEALLGROUPS=0x10A0
LVM_HASGROUP=0x10A1
LVM_SETTILEVIEWINFO=0x10A2
LVM_GETTILEVIEWINFO=0x10A3
LVM_SETTILEINFO=0x10A4
LVM_GETTILEINFO=0x10A5
LVM_SETINSERTMARK=0x10A6
LVM_GETINSERTMARK=0x10A7
LVM_INSERTMARKHITTEST=0x10A8
LVM_GETINSERTMARKRECT=0x10A9
LVM_SETINSERTMARKCOLOR=0x10AA
LVM_GETINSERTMARKCOLOR=0x10AB
LVM_SETINFOTIP=0x10AD
LVM_GETSELECTEDCOLUMN=0x10AE
LVM_ISGROUPVIEWENABLED=0x10AF
LVM_GETOUTLINECOLOR=0x10B0
LVM_SETOUTLINECOLOR=0x10B1
LVM_CANCELEDITLABEL=0x10B3
LVM_MAPINDEXTOID=0x10B4
LVM_MAPIDTOINDEX=0x10B5
LVM_ISITEMVISIBLE=0x10B6
LVM_GETEMPTYTEXT=0x10CC
LVM_GETFOOTERRECT=0x10CD
LVM_GETFOOTERINFO=0x10CE
LVM_GETFOOTERITEMRECT=0x10CF
LVM_GETFOOTERITEM=0x10D0
LVM_GETITEMINDEXRECT=0x10D1
LVM_SETITEMINDEXSTATE=0x10D2
LVM_GETNEXTITEMINDEX=0x10D3
LVM_SETUNICODEFORMAT=0x2005
LVM_GETUNICODEFORMAT=0x2006

[SysHeader32]
HDM_GETITEMCOUNT=0x1200
HDM_INSERTITEMA=0x1201
HDM_DELETEITEM=0x1202
HDM_GETITEMA=0x1203
HDM_SETITEMA=0x1204
HDM_LAYOUT=0x1205
HDM_HITTEST=0x1206
HDM_GETITEMRECT=0x1207
HDM_SETIMAGELIST=0x1208
HDM_GETIMAGELIST=0x1209
HDM_INSERTITEMW=0x120A
HDM_GETITEMW=0x120B
HDM_SETITEMW=0x120C
HDM_ORDERTOINDEX=0x120F
HDM_CREATEDRAGIMAGE=0x1210
HDM_GETORDERARRAY=0x1211
HDM_SETORDERARRAY=0x1212
HDM_SETHOTDIVIDER=0x1213
HDM_SETBITMAPMARGIN=0x1214
HDM_GETBITMAPMARGIN=0x1215
HDM_SETFILTERCHANGETIMEOUT=0x1216
HDM_EDITFILTER=0x1217
HDM_CLEARFILTER=0x1218
HDM_GETITEMDROPDOWNRECT=0x1219
HDM_GETOVERFLOWRECT=0x121A
HDM_GETFOCUSEDITEM=0x121B
HDM_SETFOCUSEDITEM=0x121C
HDM_SETUNICODEFORMAT=0x2004
HDM_GETUNICODEFORMAT=0x2005
HDM_TRANSLATEACCELERATOR=0x200A

[SysMonthCal32]
MCM_GETCURSEL=0x1001
MCM_SETCURSEL=0x1002
MCM_GETMAXSELCOUNT=0x1003
MCM_SETMAXSELCOUNT=0x1004
MCM_GETSELRANGE=0x1005
MCM_SETSELRANGE=0x1006
MCM_GETMONTHRANGE=0x1007
MCM_SETDAYSTATE=0x1008
MCM_GETMINREQRECT=0x1009
MCM_SETCOLOR=0x100A
MCM_GETCOLOR=0x100B
MCM_SETTODAY=0x100C
MCM_GETTODAY=0x100D
MCM_HITTEST=0x100E
MCM_SETFIRSTDAYOFWEEK=0x100F
MCM_GETFIRSTDAYOFWEEK=0x1010
MCM_GETRANGE=0x1011
MCM_SETRANGE=0x1012
MCM_GETMONTHDELTA=0x1013
MCM_SETMONTHDELTA=0x1014
MCM_GETCURRENTVIEW=0x1016
MCM_GETCALENDARCOUNT=0x1017
MCM_GETCALENDARGRIDINFO=0x1018
MCM_GETCALID=0x101B
MCM_SETCALID=0x101C
MCM_SIZERECTTOMIN=0x101D
MCM_SETCALENDARBORDER=0x101E
MCM_GETCALENDARBORDER=0x101F
MCM_SETCURRENTVIEW=0x1020
MCM_SETUNICODEFORMAT=0x2005
MCM_GETUNICODEFORMAT=0x2006

[msctls_progress32]
PBM_SETRANGE=0x0401
PBM_SETPOS=0x0402
PBM_DELTAPOS=0x0403
PBM_SETSTEP=0x0404
PBM_STEPIT=0x0405
PBM_SETRANGE32=0x0406
PBM_GETRANGE=0x0407
PBM_GETPOS=0x0408
PBM_SETBARCOLOR=0x0409
PBM_SETMARQUEE=0x040A
PBM_GETSTEP=0x040D
PBM_GETBKCOLOR=0x040E
PBM_GETBARCOLOR=0x040F
PBM_SETSTATE=0x0410
PBM_GETSTATE=0x0411
PBM_SETBKCOLOR=0x2001

[ReBarWindow32]
RB_INSERTBANDA=0x0401
RB_DELETEBAND=0x0402
RB_GETBARINFO=0x0403
RB_SETBARINFO=0x0404
RB_GETBANDINFO=0x0405
RB_SETBANDINFOA=0x0406
RB_SETPARENT=0x0407
RB_HITTEST=0x0408
RB_GETRECT=0x0409
RB_INSERTBANDW=0x040A
RB_SETBANDINFOW=0x040B
RB_GETBANDCOUNT=0x040C
RB_GETROWCOUNT=0x040D
RB_GETROWHEIGHT=0x040E
RB_IDTOINDEX=0x0410
RB_GETTOOLTIPS=0x0411
RB_SETTOOLTIPS=0x0412
RB_SETBKCOLOR=0x0413
RB_GETBKCOLOR=0x0414
RB_SETTEXTCOLOR=0x0415
RB_GETTEXTCOLOR=0x0416
RB_SIZETORECT=0x0417
RB_BEGINDRAG=0x0418
RB_ENDDRAG=0x0419
RB_DRAGMOVE=0x041A
RB_GETBARHEIGHT=0x041B
RB_GETBANDINFOW=0x041C
RB_GETBANDINFOA=0x041D
RB_MINIMIZEBAND=0x041E
RB_MAXIMIZEBAND=0x041F
RB_GETBANDBORDERS=0x0422
RB_SHOWBAND=0x0423
RB_SETPALETTE=0x0425
RB_GETPALETTE=0x0426
RB_MOVEBAND=0x0427
RB_GETBANDMARGINS=0x0428
RB_SETEXTENDEDSTYLE=0x0429
RB_GETEXTENDEDSTYLE=0x042A
RB_PUSHCHEVRON=0x042B
RB_SETBANDWIDTH=0x042C
RB_SETCOLORSCHEME=0x2002
RB_GETCOLORSCHEME=0x2003
RB_GETDROPTARGET=0x2004
RB_SETUNICODEFORMAT=0x2004
RB_GETUNICODEFORMAT=0x2005
RB_SETWINDOWTHEME=0x200B

[msctls_trackbar32]
TBM_GETPOS=0x0400
TBM_GETRANGEMIN=0x0401
TBM_GETRANGEMAX=0x0402
TBM_GETTIC=0x0403
TBM_SETTIC=0x0404
TBM_SETPOS=0x0405
TBM_SETRANGE=0x0406
TBM_SETRANGEMIN=0x0407
TBM_SETRANGEMAX=0x0408
TBM_CLEARTICS=0x0409
TBM_SETSEL=0x040A
TBM_SETSELSTART=0x040B
TBM_SETSELEND=0x040C
TBM_GETPTICS=0x040E
TBM_GETTICPOS=0x040F
TBM_GETNUMTICS=0x0410
TBM_GETSELSTART=0x0411
TBM_GETSELEND=0x0412
TBM_CLEARSEL=0x0413
TBM_SETTICFREQ=0x0414
TBM_SETPAGESIZE=0x0415
TBM_GETPAGESIZE=0x0416
TBM_SETLINESIZE=0x0417
TBM_GETLINESIZE=0x0418
TBM_GETTHUMBRECT=0x0419
TBM_GETCHANNELRECT=0x041A
TBM_SETTHUMBLENGTH=0x041B
TBM_GETTHUMBLENGTH=0x041C
TBM_SETTOOLTIPS=0x041D
TBM_GETTOOLTIPS=0x041E
TBM_SETTIPSIDE=0x041F
TBM_SETBUDDY=0x0420
TBM_GETBUDDY=0x0421
TBM_SETPOSNOTIFY=0x0422
TBM_SETUNICODEFORMAT=0x2005
TBM_GETUNICODEFORMAT=0x2006

[Static]
STM_SETICON=0x0170
STM_GETICON=0x0171
STM_SETIMAGE=0x0172
STM_GETIMAGE=0x0173

[msctls_statusbar32]
SB_SETTEXTA=0x0401
SB_GETTEXTA=0x0402
SB_GETTEXTLENGTHA=0x0403
SB_SETPARTS=0x0404
SB_GETPARTS=0x0406
SB_GETBORDERS=0x0407
SB_SETMINHEIGHT=0x0408
SB_SIMPLE=0x0409
SB_GETRECT=0x040A
SB_SETTEXTW=0x040B
SB_GETTEXTLENGTHW=0x040C
SB_GETTEXTW=0x040D
SB_ISSIMPLE=0x040E
SB_SETICON=0x040F
SB_SETTIPTEXTA=0x0410
SB_SETTIPTEXTW=0x0411
SB_GETTIPTEXTA=0x0412
SB_GETTIPTEXTW=0x0413
SB_GETICON=0x0414
SB_SETBKCOLOR=0x2001
SB_SETUNICODEFORMAT=0x2005
SB_GETUNICODEFORMAT=0x2006

[SysTabControl32]
TCM_GETIMAGELIST=0x1302
TCM_SETIMAGELIST=0x1303
TCM_GETITEMCOUNT=0x1304
TCM_GETITEMA=0x1305
TCM_SETITEMA=0x1306
TCM_INSERTITEMA=0x1307
TCM_DELETEITEM=0x1308
TCM_DELETEALLITEMS=0x1309
TCM_GETITEMRECT=0x130A
TCM_GETCURSEL=0x130B
TCM_SETCURSEL=0x130C
TCM_HITTEST=0x130D
TCM_SETITEMEXTRA=0x130E
TCM_ADJUSTRECT=0x1328
TCM_SETITEMSIZE=0x1329
TCM_REMOVEIMAGE=0x132A
TCM_SETPADDING=0x132B
TCM_GETROWCOUNT=0x132C
TCM_GETTOOLTIPS=0x132D
TCM_SETTOOLTIPS=0x132E
TCM_GETCURFOCUS=0x132F
TCM_SETCURFOCUS=0x1330
TCM_SETMINTABWIDTH=0x1331
TCM_DESELECTALL=0x1332
TCM_HIGHLIGHTITEM=0x1333
TCM_SETEXTENDEDSTYLE=0x1334
TCM_GETEXTENDEDSTYLE=0x1335
TCM_GETITEMW=0x133C
TCM_SETITEMW=0x133D
TCM_INSERTITEMW=0x133E
TCM_SETUNICODEFORMAT=0x2005
TCM_GETUNICODEFORMAT=0x2006

[ToolbarWindow32]
TB_ENABLEBUTTON=0x0401
TB_CHECKBUTTON=0x0402
TB_PRESSBUTTON=0x0403
TB_HIDEBUTTON=0x0404
TB_INDETERMINATE=0x0405
TB_MARKBUTTON=0x0406
TB_ISBUTTONENABLED=0x0409
TB_ISBUTTONCHECKED=0x040A
TB_ISBUTTONPRESSED=0x040B
TB_ISBUTTONHIDDEN=0x040C
TB_ISBUTTONINDETERMINATE=0x040D
TB_ISBUTTONHIGHLIGHTED=0x040E
TB_SETSTATE=0x0411
TB_GETSTATE=0x0412
TB_ADDBITMAP=0x0413
TB_ADDBUTTONSA=0x0414
TB_INSERTBUTTONA=0x0415
TB_DELETEBUTTON=0x0416
TB_GETBUTTON=0x0417
TB_BUTTONCOUNT=0x0418
TB_COMMANDTOINDEX=0x0419
TB_SAVERESTOREA=0x041A
TB_CUSTOMIZE=0x041B
TB_ADDSTRINGA=0x041C
TB_GETITEMRECT=0x041D
TB_BUTTONSTRUCTSIZE=0x041E
TB_SETBUTTONSIZE=0x041F
TB_SETBITMAPSIZE=0x0420
TB_AUTOSIZE=0x0421
TB_GETTOOLTIPS=0x0423
TB_SETTOOLTIPS=0x0424
TB_SETPARENT=0x0425
TB_SETROWS=0x0427
TB_GETROWS=0x0428
TB_SETCMDID=0x042A
TB_CHANGEBITMAP=0x042B
TB_GETBITMAP=0x042C
TB_GETBUTTONTEXTA=0x042D
TB_REPLACEBITMAP=0x042E
TB_SETINDENT=0x042F
TB_SETIMAGELIST=0x0430
TB_GETIMAGELIST=0x0431
TB_LOADIMAGES=0x0432
TB_GETRECT=0x0433
TB_SETHOTIMAGELIST=0x0434
TB_GETHOTIMAGELIST=0x0435
TB_SETDISABLEDIMAGELIST=0x0436
TB_GETDISABLEDIMAGELIST=0x0437
TB_SETSTYLE=0x0438
TB_GETSTYLE=0x0439
TB_GETBUTTONSIZE=0x043A
TB_SETBUTTONWIDTH=0x043B
TB_SETMAXTEXTROWS=0x043C
TB_GETTEXTROWS=0x043D
TB_GETOBJECT=0x043E
TB_GETBUTTONINFOW=0x043F
TB_SETBUTTONINFOW=0x0440
TB_GETBUTTONINFOA=0x0441
TB_SETBUTTONINFOA=0x0442
TB_INSERTBUTTONW=0x0443
TB_ADDBUTTONSW=0x0444
TB_HITTEST=0x0445
TB_SETDRAWTEXTFLAGS=0x0446
TB_GETHOTITEM=0x0447
TB_SETHOTITEM=0x0448
TB_SETANCHORHIGHLIGHT=0x0449
TB_GETANCHORHIGHLIGHT=0x044A
TB_GETBUTTONTEXTW=0x044B
TB_SAVERESTOREW=0x044C
TB_ADDSTRINGW=0x044D
TB_MAPACCELERATORA=0x044E
TB_GETINSERTMARK=0x044F
TB_SETINSERTMARK=0x0450
TB_INSERTMARKHITTEST=0x0451
TB_MOVEBUTTON=0x0452
TB_GETMAXSIZE=0x0453
TB_SETEXTENDEDSTYLE=0x0454
TB_GETEXTENDEDSTYLE=0x0455
TB_GETPADDING=0x0456
TB_SETPADDING=0x0457
TB_SETINSERTMARKCOLOR=0x0458
TB_GETINSERTMARKCOLOR=0x0459
TB_MAPACCELERATORW=0x045A
TB_GETSTRINGW=0x045B
TB_GETSTRINGA=0x045C
TB_SETHOTITEM2=0x045E
TB_SETLISTGAP=0x0460
TB_GETIMAGELISTCOUNT=0x0462
TB_GETIDEALSIZE=0x0463
TB_GETMETRICS=0x0465
TB_SETMETRICS=0x0466
TB_GETITEMDROPDOWNRECT=0x0467
TB_SETPRESSEDIMAGELIST=0x0468
TB_GETPRESSEDIMAGELIST=0x0469
TB_SETCOLORSCHEME=0x2002
TB_GETCOLORSCHEME=0x2003
TB_SETUNICODEFORMAT=0x2004
TB_GETUNICODEFORMAT=0x2005
TB_TRANSLATEACCELERATOR=0x200A
TB_SETWINDOWTHEME=0x200B

[tooltips_class32]
TTM_ACTIVATE=0x0401
TTM_SETDELAYTIME=0x0403
TTM_ADDTOOLA=0x0404
TTM_DELTOOLA=0x0405
TTM_NEWTOOLRECTA=0x0406
TTM_RELAYEVENT=0x0407
TTM_GETTOOLINFOA=0x0408
TTM_SETTOOLINFOA=0x0409
TTM_HITTESTA=0x040A
TTM_GETTEXTA=0x040B
TTM_UPDATETIPTEXTA=0x040C
TTM_GETTOOLCOUNT=0x040D
TTM_ENUMTOOLSA=0x040E
TTM_GETCURRENTTOOLA=0x040F
TTM_WINDOWFROMPOINT=0x0410
TTM_TRACKACTIVATE=0x0411
TTM_TRACKPOSITION=0x0412
TTM_SETTIPBKCOLOR=0x0413
TTM_SETTIPTEXTCOLOR=0x0414
TTM_GETDELAYTIME=0x0415
TTM_GETTIPBKCOLOR=0x0416
TTM_GETTIPTEXTCOLOR=0x0417
TTM_SETMAXTIPWIDTH=0x0418
TTM_GETMAXTIPWIDTH=0x0419
TTM_SETMARGIN=0x041A
TTM_GETMARGIN=0x041B
TTM_POP=0x041C
TTM_UPDATE=0x041D
TTM_GETBUBBLESIZE=0x041E
TTM_ADJUSTRECT=0x041F
TTM_SETTITLEA=0x0420
TTM_SETTITLEW=0x0421
TTM_POPUP=0x0422
TTM_GETTITLE=0x0423
TTM_ADDTOOLW=0x0432
TTM_DELTOOLW=0x0433
TTM_NEWTOOLRECTW=0x0434
TTM_GETTOOLINFOW=0x0435
TTM_HITTESTW=0x0437
TTM_GETTEXTW=0x0438
TTM_UPDATETIPTEXTW=0x0439
TTM_ENUMTOOLSW=0x043A
TTM_GETCURRENTTOOLW=0x043B
TTM_SETTOOLINFOW=0x0636
TTM_SETWINDOWTHEME=0x200B

[SysTreeView32]
TVM_INSERTITEMA=0x1100
TVM_DELETEITEM=0x1101
TVM_EXPAND=0x1102
TVM_GETITEMRECT=0x1104
TVM_GETCOUNT=0x1105
TVM_GETINDENT=0x1106
TVM_SETINDENT=0x1107
TVM_GETIMAGELIST=0x1108
TVM_SETIMAGELIST=0x1109
TVM_GETNEXTITEM=0x110A
TVM_SELECTITEM=0x110B
TVM_GETITEMA=0x110C
TVM_SETITEMA=0x110D
TVM_EDITLABELA=0x110E
TVM_GETEDITCONTROL=0x110F
TVM_GETVISIBLECOUNT=0x1110
TVM_HITTEST=0x1111
TVM_CREATEDRAGIMAGE=0x1112
TVM_SORTCHILDREN=0x1113
TVM_ENSUREVISIBLE=0x1114
TVM_SORTCHILDRENCB=0x1115
TVM_ENDEDITLABELNOW=0x1116
TVM_GETISEARCHSTRINGA=0x1117
TVM_SETTOOLTIPS=0x1118
TVM_GETTOOLTIPS=0x1119
TVM_SETINSERTMARK=0x111A
TVM_SETITEMHEIGHT=0x111B
TVM_GETITEMHEIGHT=0x111C
TVM_SETBKCOLOR=0x111D
TVM_SETTEXTCOLOR=0x111E
TVM_GETTEXTCOLOR=0x1120
TVM_SETSCROLLTIME=0x1121
TVM_GETSCROLLTIME=0x1122
TVM_SETINSERTMARKCOLOR=0x1125
TVM_GETINSERTMARKCOLOR=0x1126
TVM_GETITEMSTATE=0x1127
TVM_SETLINECOLOR=0x1128
TVM_GETLINECOLOR=0x1129
TVM_MAPACCIDTOHTREEITEM=0x112A
TVM_MAPHTREEITEMTOACCID=0x112B
TVM_SETEXTENDEDSTYLE=0x112C
TVM_GETEXTENDEDSTYLE=0x112D
TVM_GETBKCOLOR=0x112F
TVM_SETAUTOSCROLLINFO=0x113B
TVM_GETITEMW=0x113E
TVM_SETITEMW=0x113F
TVM_GETISEARCHSTRINGW=0x1140
TVM_EDITLABELW=0x1141
TVM_INSERTITEMW=0x1142
TVM_GETSELECTEDCOUNT=0x1146
TVM_SHOWINFOTIP=0x1147
TVM_GETITEMPARTRECT=0x1148
TVM_SETUNICODEFORMAT=0x2005
TVM_GETUNICODEFORMAT=0x2006

[msctls_updown32]
UDM_SETRANGE=0x0465
UDM_GETRANGE=0x0466
UDM_SETPOS=0x0467
UDM_GETPOS=0x0468
UDM_SETBUDDY=0x0469
UDM_GETBUDDY=0x046A
UDM_SETACCEL=0x046B
UDM_GETACCEL=0x046C
UDM_SETBASE=0x046D
UDM_GETBASE=0x046E
UDM_SETRANGE32=0x046F
UDM_GETRANGE32=0x0470
UDM_SETPOS32=0x0471
UDM_GETPOS32=0x0472
UDM_SETUNICODEFORMAT=0x2005
UDM_GETUNICODEFORMAT=0x2006

[CommonControls]
CCM_SETBKCOLOR=0x2001
CCM_SETCOLORSCHEME=0x2002
CCM_GETCOLORSCHEME=0x2003
CCM_GETDROPTARGET=0x2004
CCM_SETUNICODEFORMAT=0x2005
CCM_GETUNICODEFORMAT=0x2006
CCM_SETVERSION=0x2007
CCM_GETVERSION=0x2008
CCM_SETNOTIFYWINDOW=0x2009
CCM_SETWINDOWTHEME=0x200B
CCM_DPISCALE=0x200C

[ComboBoxEx]
CBEM_DELETEITEM=0x0144
CBEM_INSERTITEMA=0x0401
CBEM_SETIMAGELIST=0x0402
CBEM_GETIMAGELIST=0x0403
CBEM_GETITEMA=0x0404
CBEM_SETITEMA=0x0405
CBEM_GETCOMBOCONTROL=0x0406
CBEM_GETEDITCONTROL=0x0407
CBEM_SETEXSTYLE=0x0408
CBEM_GETEXSTYLE=0x0409
CBEM_GETEXTENDEDSTYLE=0x0409
CBEM_HASEDITCHANGED=0x040A
CBEM_INSERTITEMW=0x040B
CBEM_SETITEMW=0x040C
CBEM_GETITEMW=0x040D
CBEM_SETEXTENDEDSTYLE=0x040E
CBEM_SETUNICODEFORMAT=0x2004
CBEM_GETUNICODEFORMAT=0x2005
CBEM_SETWINDOWTHEME=0x200B

[#32770]
DM_GETDEFID=0x400
DM_SETDEFID=0x401
DM_REPOSITION=0x402

[ScrollBar]
SBM_SETPOS=0xE0
SBM_GETPOS=0xE1
SBM_SETRANGE=0xE2
SBM_GETRANGE=0xE3
SBM_ENABLE_ARROWS=0xE4
SBM_SETRANGEREDRAW=0xE6
SBM_SETSCROLLINFO=0xE9
SBM_GETSCROLLINFO=0xEA
SBM_GETSCROLLBARINFO=0xEB

[SysAnimate32]
ACM_OPENA=0x464
ACM_OPENW=0x467
ACM_PLAY=0x465
ACM_STOP=0x466
ACM_ISPLAYING=0x468

[SysIPAddress32]
IPM_CLEARADDRESS=0x464
IPM_SETADDRESS=0x465
IPM_GETADDRESS=0x466
IPM_SETRANGE=0x467
IPM_SETFOCUS=0x468
IPM_ISBLANK=0x469

[SysPager]
PGM_SETCHILD=0x1401
PGM_RECALCSIZE=0x1402
PGM_FORWARDMOUSE=0x1403
PGM_SETBKCOLOR=0x1404
PGM_GETBKCOLOR=0x1405
PGM_SETBORDER=0x1406
PGM_GETBORDER=0x1407
PGM_SETPOS=0x1408
PGM_GETPOS=0x1409
PGM_SETBUTTONSIZE=0x140A
PGM_GETBUTTONSIZE=0x140B
PGM_GETBUTTONSTATE=0x140C
PGM_GETDROPTARGET=0x2004

[RICHEDIT50W]
EM_GETLIMITTEXT=0xD5
EM_POSFROMCHAR=0xD6
EM_CHARFROMPOS=0xD7
EM_SCROLLCARET=0xB7
EM_CANPASTE=0x432
EM_DISPLAYBAND=0x433
EM_EXGETSEL=0x434
EM_EXLIMITTEXT=0x435
EM_EXLINEFROMCHAR=0x436
EM_EXSETSEL=0x437
EM_FINDTEXT=0x438
EM_FORMATRANGE=0x439
EM_GETCHARFORMAT=0x43A
EM_GETEVENTMASK=0x43B
EM_GETOLEINTERFACE=0x43C
EM_GETPARAFORMAT=0x43D
EM_GETSELTEXT=0x43E
EM_HIDESELECTION=0x43F
EM_PASTESPECIAL=0x440
EM_REQUESTRESIZE=0x441
EM_SELECTIONTYPE=0x442
EM_SETBKGNDCOLOR=0x443
EM_SETCHARFORMAT=0x444
EM_SETEVENTMASK=0x445
EM_SETOLECALLBACK=0x446
EM_SETPARAFORMAT=0x447
EM_SETTARGETDEVICE=0x448
EM_STREAMIN=0x449
EM_STREAMOUT=0x44A
EM_GETTEXTRANGE=0x44B
EM_FINDWORDBREAK=0x44C
EM_SETOPTIONS=0x44D
EM_GETOPTIONS=0x44E
EM_FINDTEXTEX=0x44F
EM_GETWORDBREAKPROCEX=0x450
EM_SETWORDBREAKPROCEX=0x451
EM_SETUNDOLIMIT=0x452
EM_REDO=0x454
EM_CANREDO=0x455
EM_GETUNDONAME=0x456
EM_GETREDONAME=0x457
EM_STOPGROUPTYPING=0x458
EM_SETTEXTMODE=0x459
EM_GETTEXTMODE=0x45A
EM_AUTOURLDETECT=0x45B
EM_GETAUTOURLDETECT=0x45C
EM_SETPALETTE=0x45D
EM_GETTEXTEX=0x45E
EM_GETTEXTLENGTHEX=0x45F
EM_SHOWSCROLLBAR=0x460
EM_SETTEXTEX=0x461
EM_SETPUNCTUATION=0x464
EM_GETPUNCTUATION=0x465
EM_SETWORDWRAPMODE=0x466
EM_GETWORDWRAPMODE=0x467
EM_SETIMECOLOR=0x468
EM_GETIMECOLOR=0x469
EM_SETIMEOPTIONS=0x46A
EM_GETIMEOPTIONS=0x46B
EM_CONVPOSITION=0x46C
EM_SETLANGOPTIONS=0x478
EM_GETLANGOPTIONS=0x479
EM_GETIMECOMPMODE=0x47A
EM_FINDTEXTW=0x47B
EM_FINDTEXTEXW=0x47C
EM_RECONVERSION=0x47D
EM_SETIMEMODEBIAS=0x47E
EM_GETIMEMODEBIAS=0x47F
EM_SETBIDIOPTIONS=0x4C8
EM_GETBIDIOPTIONS=0x4C9
EM_SETTYPOGRAPHYOPTIONS=0x4CA
EM_GETTYPOGRAPHYOPTIONS=0x4CB
EM_SETEDITSTYLE=0x4CC
EM_GETEDITSTYLE=0x4CD
EM_OUTLINE=0x4DC
EM_GETSCROLLPOS=0x4DD
EM_SETSCROLLPOS=0x4DE
EM_SETFONTSIZE=0x4DF
EM_GETZOOM=0x4E0
EM_SETZOOM=0x4E1
EM_GETVIEWKIND=0x4E2
EM_SETVIEWKIND=0x4E3
EM_GETPAGE=0x4E4
EM_SETPAGE=0x4E5
EM_GETHYPHENATEINFO=0x4E6
EM_SETHYPHENATEINFO=0x4E7
EM_GETPAGEROTATE=0x4EB
EM_SETPAGEROTATE=0x4EC
EM_GETCTFMODEBIAS=0x4ED
EM_SETCTFMODEBIAS=0x4EE
EM_GETCTFOPENSTATUS=0x4F0
EM_SETCTFOPENSTATUS=0x4F1
EM_GETIMECOMPTEXT=0x4F2
EM_ISIME=0x4F3
EM_GETIMEPROPERTY=0x4F4
EM_GETQUERYRTFOBJ=0x50D
EM_SETQUERYRTFOBJ=0x50E

[Scintilla]
SCI_START=2000
SCI_OPTIONAL_START=3000
SCI_LEXER_START=4000
SCI_ADDTEXT=2001
SCI_ADDSTYLEDTEXT=2002
SCI_INSERTTEXT=2003
SCI_CHANGEINSERTION=2672
SCI_CLEARALL=2004
SCI_DELETERANGE=2645
SCI_CLEARDOCUMENTSTYLE=2005
SCI_GETLENGTH=2006
SCI_GETCHARAT=2007
SCI_GETCURRENTPOS=2008
SCI_GETANCHOR=2009
SCI_GETSTYLEAT=2010
SCI_REDO=2011
SCI_SETUNDOCOLLECTION=2012
SCI_SELECTALL=2013
SCI_SETSAVEPOINT=2014
SCI_GETSTYLEDTEXT=2015
SCI_CANREDO=2016
SCI_MARKERLINEFROMHANDLE=2017
SCI_MARKERDELETEHANDLE=2018
SCI_GETUNDOCOLLECTION=2019
SCI_GETVIEWWS=2020
SCI_SETVIEWWS=2021
SCI_GETTABDRAWMODE=2698
SCI_SETTABDRAWMODE=2699
SCI_POSITIONFROMPOINT=2022
SCI_POSITIONFROMPOINTCLOSE=2023
SCI_GOTOLINE=2024
SCI_GOTOPOS=2025
SCI_SETANCHOR=2026
SCI_GETCURLINE=2027
SCI_GETENDSTYLED=2028
SCI_CONVERTEOLS=2029
SCI_GETEOLMODE=2030
SCI_SETEOLMODE=2031
SCI_STARTSTYLING=2032
SCI_SETSTYLING=2033
SCI_GETBUFFEREDDRAW=2034
SCI_SETBUFFEREDDRAW=2035
SCI_SETTABWIDTH=2036
SCI_GETTABWIDTH=2121
SCI_CLEARTABSTOPS=2675
SCI_ADDTABSTOP=2676
SCI_GETNEXTTABSTOP=2677
SCI_SETCODEPAGE=2037
SCI_GETIMEINTERACTION=2678
SCI_SETIMEINTERACTION=2679
SCI_MARKERDEFINE=2040
SCI_MARKERSETFORE=2041
SCI_MARKERSETBACK=2042
SCI_MARKERSETBACKSELECTED=2292
SCI_MARKERENABLEHIGHLIGHT=2293
SCI_MARKERADD=2043
SCI_MARKERDELETE=2044
SCI_MARKERDELETEALL=2045
SCI_MARKERGET=2046
SCI_MARKERNEXT=2047
SCI_MARKERPREVIOUS=2048
SCI_MARKERDEFINEPIXMAP=2049
SCI_MARKERADDSET=2466
SCI_MARKERSETALPHA=2476
SCI_SETMARGINTYPEN=2240
SCI_GETMARGINTYPEN=2241
SCI_SETMARGINWIDTHN=2242
SCI_GETMARGINWIDTHN=2243
SCI_SETMARGINMASKN=2244
SCI_GETMARGINMASKN=2245
SCI_SETMARGINSENSITIVEN=2246
SCI_GETMARGINSENSITIVEN=2247
SCI_SETMARGINCURSORN=2248
SCI_GETMARGINCURSORN=2249
SCI_SETMARGINBACKN=2250
SCI_GETMARGINBACKN=2251
SCI_SETMARGINS=2252
SCI_GETMARGINS=2253
SCI_STYLECLEARALL=2050
SCI_STYLESETFORE=2051
SCI_STYLESETBACK=2052
SCI_STYLESETBOLD=2053
SCI_STYLESETITALIC=2054
SCI_STYLESETSIZE=2055
SCI_STYLESETFONT=2056
SCI_STYLESETEOLFILLED=2057
SCI_STYLERESETDEFAULT=2058
SCI_STYLESETUNDERLINE=2059
SCI_STYLEGETFORE=2481
SCI_STYLEGETBACK=2482
SCI_STYLEGETBOLD=2483
SCI_STYLEGETITALIC=2484
SCI_STYLEGETSIZE=2485
SCI_STYLEGETFONT=2486
SCI_STYLEGETEOLFILLED=2487
SCI_STYLEGETUNDERLINE=2488
SCI_STYLEGETCASE=2489
SCI_STYLEGETCHARACTERSET=2490
SCI_STYLEGETVISIBLE=2491
SCI_STYLEGETCHANGEABLE=2492
SCI_STYLEGETHOTSPOT=2493
SCI_STYLESETCASE=2060
SCI_STYLESETSIZEFRACTIONAL=2061
SCI_STYLEGETSIZEFRACTIONAL=2062
SCI_STYLESETWEIGHT=2063
SCI_STYLEGETWEIGHT=2064
SCI_STYLESETCHARACTERSET=2066
SCI_STYLESETHOTSPOT=2409
SCI_SETSELFORE=2067
SCI_SETSELBACK=2068
SCI_GETSELALPHA=2477
SCI_SETSELALPHA=2478
SCI_GETSELEOLFILLED=2479
SCI_SETSELEOLFILLED=2480
SCI_SETCARETFORE=2069
SCI_ASSIGNCMDKEY=2070
SCI_CLEARCMDKEY=2071
SCI_CLEARALLCMDKEYS=2072
SCI_SETSTYLINGEX=2073
SCI_STYLESETVISIBLE=2074
SCI_GETCARETPERIOD=2075
SCI_SETCARETPERIOD=2076
SCI_SETWORDCHARS=2077
SCI_GETWORDCHARS=2646
SCI_BEGINUNDOACTION=2078
SCI_ENDUNDOACTION=2079
SCI_INDICSETSTYLE=2080
SCI_INDICGETSTYLE=2081
SCI_INDICSETFORE=2082
SCI_INDICGETFORE=2083
SCI_INDICSETUNDER=2510
SCI_INDICGETUNDER=2511
SCI_INDICSETHOVERSTYLE=2680
SCI_INDICGETHOVERSTYLE=2681
SCI_INDICSETHOVERFORE=2682
SCI_INDICGETHOVERFORE=2683
SCI_INDICSETFLAGS=2684
SCI_INDICGETFLAGS=2685
SCI_SETWHITESPACEFORE=2084
SCI_SETWHITESPACEBACK=2085
SCI_SETWHITESPACESIZE=2086
SCI_GETWHITESPACESIZE=2087
SCI_SETSTYLEBITS=2090
SCI_GETSTYLEBITS=2091
SCI_SETLINESTATE=2092
SCI_GETLINESTATE=2093
SCI_GETMAXLINESTATE=2094
SCI_GETCARETLINEVISIBLE=2095
SCI_SETCARETLINEVISIBLE=2096
SCI_GETCARETLINEBACK=2097
SCI_SETCARETLINEBACK=2098
SCI_GETCARETLINEFRAME=2704
SCI_SETCARETLINEFRAME=2705
SCI_STYLESETCHANGEABLE=2099
SCI_AUTOCSHOW=2100
SCI_AUTOCCANCEL=2101
SCI_AUTOCACTIVE=2102
SCI_AUTOCPOSSTART=2103
SCI_AUTOCCOMPLETE=2104
SCI_AUTOCSTOPS=2105
SCI_AUTOCSETSEPARATOR=2106
SCI_AUTOCGETSEPARATOR=2107
SCI_AUTOCSELECT=2108
SCI_AUTOCSETCANCELATSTART=2110
SCI_AUTOCGETCANCELATSTART=2111
SCI_AUTOCSETFILLUPS=2112
SCI_AUTOCSETCHOOSESINGLE=2113
SCI_AUTOCGETCHOOSESINGLE=2114
SCI_AUTOCSETIGNORECASE=2115
SCI_AUTOCGETIGNORECASE=2116
SCI_USERLISTSHOW=2117
SCI_AUTOCSETAUTOHIDE=2118
SCI_AUTOCGETAUTOHIDE=2119
SCI_AUTOCSETDROPRESTOFWORD=2270
SCI_AUTOCGETDROPRESTOFWORD=2271
SCI_REGISTERIMAGE=2405
SCI_CLEARREGISTEREDIMAGES=2408
SCI_AUTOCGETTYPESEPARATOR=2285
SCI_AUTOCSETTYPESEPARATOR=2286
SCI_AUTOCSETMAXWIDTH=2208
SCI_AUTOCGETMAXWIDTH=2209
SCI_AUTOCSETMAXHEIGHT=2210
SCI_AUTOCGETMAXHEIGHT=2211
SCI_SETINDENT=2122
SCI_GETINDENT=2123
SCI_SETUSETABS=2124
SCI_GETUSETABS=2125
SCI_SETLINEINDENTATION=2126
SCI_GETLINEINDENTATION=2127
SCI_GETLINEINDENTPOSITION=2128
SCI_GETCOLUMN=2129
SCI_COUNTCHARACTERS=2633
SCI_SETHSCROLLBAR=2130
SCI_GETHSCROLLBAR=2131
SCI_SETINDENTATIONGUIDES=2132
SCI_GETINDENTATIONGUIDES=2133
SCI_SETHIGHLIGHTGUIDE=2134
SCI_GETHIGHLIGHTGUIDE=2135
SCI_GETLINEENDPOSITION=2136
SCI_GETCODEPAGE=2137
SCI_GETCARETFORE=2138
SCI_GETREADONLY=2140
SCI_SETCURRENTPOS=2141
SCI_SETSELECTIONSTART=2142
SCI_GETSELECTIONSTART=2143
SCI_SETSELECTIONEND=2144
SCI_GETSELECTIONEND=2145
SCI_SETEMPTYSELECTION=2556
SCI_SETPRINTMAGNIFICATION=2146
SCI_GETPRINTMAGNIFICATION=2147
SCI_SETPRINTCOLOURMODE=2148
SCI_GETPRINTCOLOURMODE=2149
SCI_FINDTEXT=2150
SCI_FORMATRANGE=2151
SCI_GETFIRSTVISIBLELINE=2152
SCI_GETLINE=2153
SCI_GETLINECOUNT=2154
SCI_SETMARGINLEFT=2155
SCI_GETMARGINLEFT=2156
SCI_SETMARGINRIGHT=2157
SCI_GETMARGINRIGHT=2158
SCI_GETMODIFY=2159
SCI_SETSEL=2160
SCI_GETSELTEXT=2161
SCI_GETTEXTRANGE=2162
SCI_HIDESELECTION=2163
SCI_POINTXFROMPOSITION=2164
SCI_POINTYFROMPOSITION=2165
SCI_LINEFROMPOSITION=2166
SCI_POSITIONFROMLINE=2167
SCI_LINESCROLL=2168
SCI_SCROLLCARET=2169
SCI_SCROLLRANGE=2569
SCI_REPLACESEL=2170
SCI_SETREADONLY=2171
SCI_NULL=2172
SCI_CANPASTE=2173
SCI_CANUNDO=2174
SCI_EMPTYUNDOBUFFER=2175
SCI_UNDO=2176
SCI_CUT=2177
SCI_COPY=2178
SCI_PASTE=2179
SCI_CLEAR=2180
SCI_SETTEXT=2181
SCI_GETTEXT=2182
SCI_GETTEXTLENGTH=2183
SCI_GETDIRECTFUNCTION=2184
SCI_GETDIRECTPOINTER=2185
SCI_SETOVERTYPE=2186
SCI_GETOVERTYPE=2187
SCI_SETCARETWIDTH=2188
SCI_GETCARETWIDTH=2189
SCI_SETTARGETSTART=2190
SCI_GETTARGETSTART=2191
SCI_SETTARGETEND=2192
SCI_GETTARGETEND=2193
SCI_SETTARGETRANGE=2686
SCI_GETTARGETTEXT=2687
SCI_TARGETFROMSELECTION=2287
SCI_TARGETWHOLEDOCUMENT=2690
SCI_REPLACETARGET=2194
SCI_REPLACETARGETRE=2195
SCI_SEARCHINTARGET=2197
SCI_SETSEARCHFLAGS=2198
SCI_GETSEARCHFLAGS=2199
SCI_CALLTIPSHOW=2200
SCI_CALLTIPCANCEL=2201
SCI_CALLTIPACTIVE=2202
SCI_CALLTIPPOSSTART=2203
SCI_CALLTIPSETPOSSTART=2214
SCI_CALLTIPSETHLT=2204
SCI_CALLTIPSETBACK=2205
SCI_CALLTIPSETFORE=2206
SCI_CALLTIPSETFOREHLT=2207
SCI_CALLTIPUSESTYLE=2212
SCI_CALLTIPSETPOSITION=2213
SCI_VISIBLEFROMDOCLINE=2220
SCI_DOCLINEFROMVISIBLE=2221
SCI_WRAPCOUNT=2235
SCI_SETFOLDLEVEL=2222
SCI_GETFOLDLEVEL=2223
SCI_GETLASTCHILD=2224
SCI_GETFOLDPARENT=2225
SCI_SHOWLINES=2226
SCI_HIDELINES=2227
SCI_GETLINEVISIBLE=2228
SCI_GETALLLINESVISIBLE=2236
SCI_SETFOLDEXPANDED=2229
SCI_GETFOLDEXPANDED=2230
SCI_TOGGLEFOLD=2231
SCI_TOGGLEFOLDSHOWTEXT=2700
SCI_FOLDDISPLAYTEXTSETSTYLE=2701
SCI_FOLDLINE=2237
SCI_FOLDCHILDREN=2238
SCI_EXPANDCHILDREN=2239
SCI_FOLDALL=2662
SCI_ENSUREVISIBLE=2232
SCI_SETAUTOMATICFOLD=2663
SCI_GETAUTOMATICFOLD=2664
SCI_SETFOLDFLAGS=2233
SCI_ENSUREVISIBLEENFORCEPOLICY=2234
SCI_SETTABINDENTS=2260
SCI_GETTABINDENTS=2261
SCI_SETBACKSPACEUNINDENTS=2262
SCI_GETBACKSPACEUNINDENTS=2263
SCI_SETMOUSEDWELLTIME=2264
SCI_GETMOUSEDWELLTIME=2265
SCI_WORDSTARTPOSITION=2266
SCI_WORDENDPOSITION=2267
SCI_ISRANGEWORD=2691
SCI_SETIDLESTYLING=2692
SCI_GETIDLESTYLING=2693
SCI_SETWRAPMODE=2268
SCI_GETWRAPMODE=2269
SCI_SETWRAPVISUALFLAGS=2460
SCI_GETWRAPVISUALFLAGS=2461
SCI_SETWRAPVISUALFLAGSLOCATION=2462
SCI_GETWRAPVISUALFLAGSLOCATION=2463
SCI_SETWRAPSTARTINDENT=2464
SCI_GETWRAPSTARTINDENT=2465
SCI_SETWRAPINDENTMODE=2472
SCI_GETWRAPINDENTMODE=2473
SCI_SETLAYOUTCACHE=2272
SCI_GETLAYOUTCACHE=2273
SCI_SETSCROLLWIDTH=2274
SCI_GETSCROLLWIDTH=2275
SCI_SETSCROLLWIDTHTRACKING=2516
SCI_GETSCROLLWIDTHTRACKING=2517
SCI_TEXTWIDTH=2276
SCI_SETENDATLASTLINE=2277
SCI_GETENDATLASTLINE=2278
SCI_TEXTHEIGHT=2279
SCI_SETVSCROLLBAR=2280
SCI_GETVSCROLLBAR=2281
SCI_APPENDTEXT=2282
SCI_GETTWOPHASEDRAW=2283
SCI_SETTWOPHASEDRAW=2284
SCI_GETPHASESDRAW=2673
SCI_SETPHASESDRAW=2674
SCI_SETFONTQUALITY=2611
SCI_GETFONTQUALITY=2612
SCI_SETFIRSTVISIBLELINE=2613
SCI_SETMULTIPASTE=2614
SCI_GETMULTIPASTE=2615
SCI_GETTAG=2616
SCI_LINESJOIN=2288
SCI_LINESSPLIT=2289
SCI_SETFOLDMARGINCOLOUR=2290
SCI_SETFOLDMARGINHICOLOUR=2291
SCI_SETACCESSIBILITY=2702
SCI_GETACCESSIBILITY=2703
SCI_LINEDOWN=2300
SCI_LINEDOWNEXTEND=2301
SCI_LINEUP=2302
SCI_LINEUPEXTEND=2303
SCI_CHARLEFT=2304
SCI_CHARLEFTEXTEND=2305
SCI_CHARRIGHT=2306
SCI_CHARRIGHTEXTEND=2307
SCI_WORDLEFT=2308
SCI_WORDLEFTEXTEND=2309
SCI_WORDRIGHT=2310
SCI_WORDRIGHTEXTEND=2311
SCI_HOME=2312
SCI_HOMEEXTEND=2313
SCI_LINEEND=2314
SCI_LINEENDEXTEND=2315
SCI_DOCUMENTSTART=2316
SCI_DOCUMENTSTARTEXTEND=2317
SCI_DOCUMENTEND=2318
SCI_DOCUMENTENDEXTEND=2319
SCI_PAGEUP=2320
SCI_PAGEUPEXTEND=2321
SCI_PAGEDOWN=2322
SCI_PAGEDOWNEXTEND=2323
SCI_EDITTOGGLEOVERTYPE=2324
SCI_CANCEL=2325
SCI_DELETEBACK=2326
SCI_TAB=2327
SCI_BACKTAB=2328
SCI_NEWLINE=2329
SCI_FORMFEED=2330
SCI_VCHOME=2331
SCI_VCHOMEEXTEND=2332
SCI_ZOOMIN=2333
SCI_ZOOMOUT=2334
SCI_DELWORDLEFT=2335
SCI_DELWORDRIGHT=2336
SCI_DELWORDRIGHTEND=2518
SCI_LINECUT=2337
SCI_LINEDELETE=2338
SCI_LINETRANSPOSE=2339
SCI_LINEREVERSE=2354
SCI_LINEDUPLICATE=2404
SCI_LOWERCASE=2340
SCI_UPPERCASE=2341
SCI_LINESCROLLDOWN=2342
SCI_LINESCROLLUP=2343
SCI_DELETEBACKNOTLINE=2344
SCI_HOMEDISPLAY=2345
SCI_HOMEDISPLAYEXTEND=2346
SCI_LINEENDDISPLAY=2347
SCI_LINEENDDISPLAYEXTEND=2348
SCI_HOMEWRAP=2349
SCI_HOMEWRAPEXTEND=2450
SCI_LINEENDWRAP=2451
SCI_LINEENDWRAPEXTEND=2452
SCI_VCHOMEWRAP=2453
SCI_VCHOMEWRAPEXTEND=2454
SCI_LINECOPY=2455
SCI_MOVECARETINSIDEVIEW=2401
SCI_LINELENGTH=2350
SCI_BRACEHIGHLIGHT=2351
SCI_BRACEHIGHLIGHTINDICATOR=2498
SCI_BRACEBADLIGHT=2352
SCI_BRACEBADLIGHTINDICATOR=2499
SCI_BRACEMATCH=2353
SCI_GETVIEWEOL=2355
SCI_SETVIEWEOL=2356
SCI_GETDOCPOINTER=2357
SCI_SETDOCPOINTER=2358
SCI_SETMODEVENTMASK=2359
SCI_GETEDGECOLUMN=2360
SCI_SETEDGECOLUMN=2361
SCI_GETEDGEMODE=2362
SCI_SETEDGEMODE=2363
SCI_GETEDGECOLOUR=2364
SCI_SETEDGECOLOUR=2365
SCI_MULTIEDGEADDLINE=2694
SCI_MULTIEDGECLEARALL=2695
SCI_SEARCHANCHOR=2366
SCI_SEARCHNEXT=2367
SCI_SEARCHPREV=2368
SCI_LINESONSCREEN=2370
SCI_USEPOPUP=2371
SCI_SELECTIONISRECTANGLE=2372
SCI_SETZOOM=2373
SCI_GETZOOM=2374
SCI_CREATEDOCUMENT=2375
SCI_ADDREFDOCUMENT=2376
SCI_RELEASEDOCUMENT=2377
SCI_GETMODEVENTMASK=2378
SCI_SETFOCUS=2380
SCI_GETFOCUS=2381
SCI_SETSTATUS=2382
SCI_GETSTATUS=2383
SCI_SETMOUSEDOWNCAPTURES=2384
SCI_GETMOUSEDOWNCAPTURES=2385
SCI_SETMOUSEWHEELCAPTURES=2696
SCI_GETMOUSEWHEELCAPTURES=2697
SCI_SETCURSOR=2386
SCI_GETCURSOR=2387
SCI_SETCONTROLCHARSYMBOL=2388
SCI_GETCONTROLCHARSYMBOL=2389
SCI_WORDPARTLEFT=2390
SCI_WORDPARTLEFTEXTEND=2391
SCI_WORDPARTRIGHT=2392
SCI_WORDPARTRIGHTEXTEND=2393
SCI_SETVISIBLEPOLICY=2394
SCI_DELLINELEFT=2395
SCI_DELLINERIGHT=2396
SCI_SETXOFFSET=2397
SCI_GETXOFFSET=2398
SCI_CHOOSECARETX=2399
SCI_GRABFOCUS=2400
SCI_SETXCARETPOLICY=2402
SCI_SETYCARETPOLICY=2403
SCI_SETPRINTWRAPMODE=2406
SCI_GETPRINTWRAPMODE=2407
SCI_SETHOTSPOTACTIVEFORE=2410
SCI_GETHOTSPOTACTIVEFORE=2494
SCI_SETHOTSPOTACTIVEBACK=2411
SCI_GETHOTSPOTACTIVEBACK=2495
SCI_SETHOTSPOTACTIVEUNDERLINE=2412
SCI_GETHOTSPOTACTIVEUNDERLINE=2496
SCI_SETHOTSPOTSINGLELINE=2421
SCI_GETHOTSPOTSINGLELINE=2497
SCI_PARADOWN=2413
SCI_PARADOWNEXTEND=2414
SCI_PARAUP=2415
SCI_PARAUPEXTEND=2416
SCI_POSITIONBEFORE=2417
SCI_POSITIONAFTER=2418
SCI_POSITIONRELATIVE=2670
SCI_COPYRANGE=2419
SCI_COPYTEXT=2420
SCI_SETSELECTIONMODE=2422
SCI_GETSELECTIONMODE=2423
SCI_GETLINESELSTARTPOSITION=2424
SCI_GETLINESELENDPOSITION=2425
SCI_LINEDOWNRECTEXTEND=2426
SCI_LINEUPRECTEXTEND=2427
SCI_CHARLEFTRECTEXTEND=2428
SCI_CHARRIGHTRECTEXTEND=2429
SCI_HOMERECTEXTEND=2430
SCI_VCHOMERECTEXTEND=2431
SCI_LINEENDRECTEXTEND=2432
SCI_PAGEUPRECTEXTEND=2433
SCI_PAGEDOWNRECTEXTEND=2434
SCI_STUTTEREDPAGEUP=2435
SCI_STUTTEREDPAGEUPEXTEND=2436
SCI_STUTTEREDPAGEDOWN=2437
SCI_STUTTEREDPAGEDOWNEXTEND=2438
SCI_WORDLEFTEND=2439
SCI_WORDLEFTENDEXTEND=2440
SCI_WORDRIGHTEND=2441
SCI_WORDRIGHTENDEXTEND=2442
SCI_SETWHITESPACECHARS=2443
SCI_GETWHITESPACECHARS=2647
SCI_SETPUNCTUATIONCHARS=2648
SCI_GETPUNCTUATIONCHARS=2649
SCI_SETCHARSDEFAULT=2444
SCI_AUTOCGETCURRENT=2445
SCI_AUTOCGETCURRENTTEXT=2610
SCI_AUTOCSETCASEINSENSITIVEBEHAVIOUR=2634
SCI_AUTOCGETCASEINSENSITIVEBEHAVIOUR=2635
SCI_AUTOCSETMULTI=2636
SCI_AUTOCGETMULTI=2637
SCI_AUTOCSETORDER=2660
SCI_AUTOCGETORDER=2661
SCI_ALLOCATE=2446
SCI_TARGETASUTF8=2447
SCI_SETLENGTHFORENCODE=2448
SCI_ENCODEDFROMUTF8=2449
SCI_FINDCOLUMN=2456
SCI_GETCARETSTICKY=2457
SCI_SETCARETSTICKY=2458
SCI_TOGGLECARETSTICKY=2459
SCI_SETPASTECONVERTENDINGS=2467
SCI_GETPASTECONVERTENDINGS=2468
SCI_SELECTIONDUPLICATE=2469
SCI_SETCARETLINEBACKALPHA=2470
SCI_GETCARETLINEBACKALPHA=2471
SCI_SETCARETSTYLE=2512
SCI_GETCARETSTYLE=2513
SCI_SETINDICATORCURRENT=2500
SCI_GETINDICATORCURRENT=2501
SCI_SETINDICATORVALUE=2502
SCI_GETINDICATORVALUE=2503
SCI_INDICATORFILLRANGE=2504
SCI_INDICATORCLEARRANGE=2505
SCI_INDICATORALLONFOR=2506
SCI_INDICATORVALUEAT=2507
SCI_INDICATORSTART=2508
SCI_INDICATOREND=2509
SCI_SETPOSITIONCACHE=2514
SCI_GETPOSITIONCACHE=2515
SCI_COPYALLOWLINE=2519
SCI_GETCHARACTERPOINTER=2520
SCI_GETRANGEPOINTER=2643
SCI_GETGAPPOSITION=2644
SCI_INDICSETALPHA=2523
SCI_INDICGETALPHA=2524
SCI_INDICSETOUTLINEALPHA=2558
SCI_INDICGETOUTLINEALPHA=2559
SCI_SETEXTRAASCENT=2525
SCI_GETEXTRAASCENT=2526
SCI_SETEXTRADESCENT=2527
SCI_GETEXTRADESCENT=2528
SCI_MARKERSYMBOLDEFINED=2529
SCI_MARGINSETTEXT=2530
SCI_MARGINGETTEXT=2531
SCI_MARGINSETSTYLE=2532
SCI_MARGINGETSTYLE=2533
SCI_MARGINSETSTYLES=2534
SCI_MARGINGETSTYLES=2535
SCI_MARGINTEXTCLEARALL=2536
SCI_MARGINSETSTYLEOFFSET=2537
SCI_MARGINGETSTYLEOFFSET=2538
SCI_SETMARGINOPTIONS=2539
SCI_GETMARGINOPTIONS=2557
SCI_ANNOTATIONSETTEXT=2540
SCI_ANNOTATIONGETTEXT=2541
SCI_ANNOTATIONSETSTYLE=2542
SCI_ANNOTATIONGETSTYLE=2543
SCI_ANNOTATIONSETSTYLES=2544
SCI_ANNOTATIONGETSTYLES=2545
SCI_ANNOTATIONGETLINES=2546
SCI_ANNOTATIONCLEARALL=2547
SCI_ANNOTATIONSETVISIBLE=2548
SCI_ANNOTATIONGETVISIBLE=2549
SCI_ANNOTATIONSETSTYLEOFFSET=2550
SCI_ANNOTATIONGETSTYLEOFFSET=2551
SCI_RELEASEALLEXTENDEDSTYLES=2552
SCI_ALLOCATEEXTENDEDSTYLES=2553
SCI_ADDUNDOACTION=2560
SCI_CHARPOSITIONFROMPOINT=2561
SCI_CHARPOSITIONFROMPOINTCLOSE=2562
SCI_SETMOUSESELECTIONRECTANGULARSWITCH=2668
SCI_GETMOUSESELECTIONRECTANGULARSWITCH=2669
SCI_SETMULTIPLESELECTION=2563
SCI_GETMULTIPLESELECTION=2564
SCI_SETADDITIONALSELECTIONTYPING=2565
SCI_GETADDITIONALSELECTIONTYPING=2566
SCI_SETADDITIONALCARETSBLINK=2567
SCI_GETADDITIONALCARETSBLINK=2568
SCI_SETADDITIONALCARETSVISIBLE=2608
SCI_GETADDITIONALCARETSVISIBLE=2609
SCI_GETSELECTIONS=2570
SCI_GETSELECTIONEMPTY=2650
SCI_CLEARSELECTIONS=2571
SCI_SETSELECTION=2572
SCI_ADDSELECTION=2573
SCI_DROPSELECTIONN=2671
SCI_SETMAINSELECTION=2574
SCI_GETMAINSELECTION=2575
SCI_SETSELECTIONNCARET=2576
SCI_GETSELECTIONNCARET=2577
SCI_SETSELECTIONNANCHOR=2578
SCI_GETSELECTIONNANCHOR=2579
SCI_SETSELECTIONNCARETVIRTUALSPACE=2580
SCI_GETSELECTIONNCARETVIRTUALSPACE=2581
SCI_SETSELECTIONNANCHORVIRTUALSPACE=2582
SCI_GETSELECTIONNANCHORVIRTUALSPACE=2583
SCI_SETSELECTIONNSTART=2584
SCI_GETSELECTIONNSTART=2585
SCI_SETSELECTIONNEND=2586
SCI_GETSELECTIONNEND=2587
SCI_SETRECTANGULARSELECTIONCARET=2588
SCI_GETRECTANGULARSELECTIONCARET=2589
SCI_SETRECTANGULARSELECTIONANCHOR=2590
SCI_GETRECTANGULARSELECTIONANCHOR=2591
SCI_SETRECTANGULARSELECTIONCARETVIRTUALSPACE=2592
SCI_GETRECTANGULARSELECTIONCARETVIRTUALSPACE=2593
SCI_SETRECTANGULARSELECTIONANCHORVIRTUALSPACE=2594
SCI_GETRECTANGULARSELECTIONANCHORVIRTUALSPACE=2595
SCI_SETVIRTUALSPACEOPTIONS=2596
SCI_GETVIRTUALSPACEOPTIONS=2597
SCI_SETRECTANGULARSELECTIONMODIFIER=2598
SCI_GETRECTANGULARSELECTIONMODIFIER=2599
SCI_SETADDITIONALSELFORE=2600
SCI_SETADDITIONALSELBACK=2601
SCI_SETADDITIONALSELALPHA=2602
SCI_GETADDITIONALSELALPHA=2603
SCI_SETADDITIONALCARETFORE=2604
SCI_GETADDITIONALCARETFORE=2605
SCI_ROTATESELECTION=2606
SCI_SWAPMAINANCHORCARET=2607
SCI_MULTIPLESELECTADDNEXT=2688
SCI_MULTIPLESELECTADDEACH=2689
SCI_CHANGELEXERSTATE=2617
SCI_CONTRACTEDFOLDNEXT=2618
SCI_VERTICALCENTRECARET=2619
SCI_MOVESELECTEDLINESUP=2620
SCI_MOVESELECTEDLINESDOWN=2621
SCI_SETIDENTIFIER=2622
SCI_GETIDENTIFIER=2623
SCI_RGBAIMAGESETWIDTH=2624
SCI_RGBAIMAGESETHEIGHT=2625
SCI_RGBAIMAGESETSCALE=2651
SCI_MARKERDEFINERGBAIMAGE=2626
SCI_REGISTERRGBAIMAGE=2627
SCI_SCROLLTOSTART=2628
SCI_SCROLLTOEND=2629
SCI_SETTECHNOLOGY=2630
SCI_GETTECHNOLOGY=2631
SCI_CREATELOADER=2632
SCI_FINDINDICATORSHOW=2640
SCI_FINDINDICATORFLASH=2641
SCI_FINDINDICATORHIDE=2642
SCI_VCHOMEDISPLAY=2652
SCI_VCHOMEDISPLAYEXTEND=2653
SCI_GETCARETLINEVISIBLEALWAYS=2654
SCI_SETCARETLINEVISIBLEALWAYS=2655
SCI_SETLINEENDTYPESALLOWED=2656
SCI_GETLINEENDTYPESALLOWED=2657
SCI_GETLINEENDTYPESACTIVE=2658
SCI_SETREPRESENTATION=2665
SCI_GETREPRESENTATION=2666
SCI_CLEARREPRESENTATION=2667
SCI_STARTRECORD=3001
SCI_STOPRECORD=3002
SCI_SETLEXER=4001
SCI_GETLEXER=4002
SCI_COLOURISE=4003
SCI_SETPROPERTY=4004
SCI_SETKEYWORDS=4005
SCI_SETLEXERLANGUAGE=4006
SCI_LOADLEXERLIBRARY=4007
SCI_GETPROPERTY=4008
SCI_GETPROPERTYEXPANDED=4009
SCI_GETPROPERTYINT=4010
SCI_GETSTYLEBITSNEEDED=4011
SCI_GETLEXERLANGUAGE=4012
SCI_PRIVATELEXERCALL=4013
SCI_PROPERTYNAMES=4014
SCI_PROPERTYTYPE=4015
SCI_DESCRIBEPROPERTY=4016
SCI_DESCRIBEKEYWORDSETS=4017
SCI_GETLINEENDTYPESSUPPORTED=4018
SCI_ALLOCATESUBSTYLES=4020
SCI_GETSUBSTYLESSTART=4021
SCI_GETSUBSTYLESLENGTH=4022
SCI_GETSTYLEFROMSUBSTYLE=4027
SCI_GETPRIMARYSTYLEFROMSTYLE=4028
SCI_FREESUBSTYLES=4023
SCI_SETIDENTIFIERS=4024
SCI_DISTANCETOSECONDARYSTYLES=4025
SCI_GETSUBSTYLEBASES=4026
SCI_SETKEYSUNICODE=2521
SCI_GETKEYSUNICODE=2522

[DESCRIPTIONS]
MN_GETHMENU=Get the HMENU for the current window
WM_ACTIVATE=(0x6) message is sent when a window is being activated or deactivated. This message is sent first to the window procedure of the top-level window being deactivated; it is then sent to the window procedure of the top-level window being activated.
WM_ACTIVATEAPP=(0x1C) message is sent when a window belonging to a different application than the active window is about to be activated. The message is sent to the application whose window is being activated and to the application whose window is being deactivated.
WM_AFXFIRST=(0x360) specifies the first afx message.
WM_AFXLAST=(0x37F) specifies the last afx message.
WM_APP=(0x8000) constant is used by applications to help define private messages, usually of the form WM_APP+X, where X is an integer value.
WM_APPCOMMAND=(0x0319) Notifies a window that the user generated an application command event, for example, by clicking an application command button using the mouse or typing an application command key on the keyboard.`nwParam: A handle to the window where the user clicked the button or pressed the key. This can be a child window of the window receiving the message. For more information about processing this message, see the Remarks section.`nlParam: Use the following code to get the information contained in the lParam parameter. `nThe application command is cmd, which can be one of the following values.`nValue	Meaning`nAPPCOMMAND_BASS_BOOST=20`nToggle the bass boost on and off.`nAPPCOMMAND_BASS_DOWN=19`nDecrease the bass.`nAPPCOMMAND_BASS_UP=21`nIncrease the bass.`nAPPCOMMAND_BROWSER_BACKWARD=1`nNavigate backward.`nAPPCOMMAND_BROWSER_FAVORITES=6`nOpen favorites.`nAPPCOMMAND_BROWSER_FORWARD=2`nNavigate forward.`nAPPCOMMAND_BROWSER_HOME=7`nNavigate home.`nAPPCOMMAND_BROWSER_REFRESH=3`nRefresh page.`nAPPCOMMAND_BROWSER_SEARCH=5`nOpen search.`nAPPCOMMAND_BROWSER_STOP=4`nStop download.`nAPPCOMMAND_CLOSE=31`nClose the window (not the application).`nAPPCOMMAND_COPY=36`nCopy the selection.`nAPPCOMMAND_CORRECTION_LIST=45`nBrings up the correction list when a word is incorrectly identified during speech input.`nAPPCOMMAND_CUT=37`nCut the selection.`nAPPCOMMAND_DICTATE_OR_COMMAND_CONTROL_TOGGLE=43`nToggles between two modes of speech input: dictation and command/control (giving commands to an application or accessing menus).`nAPPCOMMAND_FIND=28`nOpen the Find dialog.`nAPPCOMMAND_FORWARD_MAIL=40`nForward a mail message.`nAPPCOMMAND_HELP=27`nOpen the Help dialog.`nAPPCOMMAND_LAUNCH_APP1=17`nStart App1.`nAPPCOMMAND_LAUNCH_APP2=18`nStart App2.`nAPPCOMMAND_LAUNCH_MAIL=15`nOpen mail.`nAPPCOMMAND_LAUNCH_MEDIA_SELECT=16`nGo to Media Select mode.`nAPPCOMMAND_MEDIA_CHANNEL_DOWN=52`nDecrement the channel value, for example, for a TV or radio tuner.`nAPPCOMMAND_MEDIA_CHANNEL_UP=51`nIncrement the channel value, for example, for a TV or radio tuner.`nAPPCOMMAND_MEDIA_FAST_FORWARD=49`nIncrease the speed of stream playback. This can be implemented in many ways, for example, using a fixed speed or toggling through a series of increasing speeds.`nAPPCOMMAND_MEDIA_NEXTTRACK=11`nGo to next track.`nAPPCOMMAND_MEDIA_PAUSE=47`nPause. If already paused, take no further action. This is a direct PAUSE command that has no state. If there are discrete Play and Pause buttons, applications should take action on this command as well as APPCOMMAND_MEDIA_PLAY_PAUSE.`nAPPCOMMAND_MEDIA_PLAY=46`nBegin playing at the current position. If already paused, it will resume. This is a direct PLAY command that has no state. If there are discrete Play and Pause buttons, applications should take action on this command as well as APPCOMMAND_MEDIA_PLAY_PAUSE.`nAPPCOMMAND_MEDIA_PLAY_PAUSE=14`nPlay or pause playback. If there are discrete Play and Pause buttons, applications should take action on this command as well as APPCOMMAND_MEDIA_PLAY and APPCOMMAND_MEDIA_PAUSE.`nAPPCOMMAND_MEDIA_PREVIOUSTRACK=12`nGo to previous track.`nAPPCOMMAND_MEDIA_RECORD=48`nBegin recording the current stream.`nAPPCOMMAND_MEDIA_REWIND=50`nGo backward in a stream at a higher rate of speed. This can be implemented in many ways, for example, using a fixed speed or toggling through a series of increasing speeds.`nAPPCOMMAND_MEDIA_STOP=13`nStop playback.`nAPPCOMMAND_MIC_ON_OFF_TOGGLE=44`nToggle the microphone.`nAPPCOMMAND_MICROPHONE_VOLUME_DOWN=25`nIncrease microphone volume.`nAPPCOMMAND_MICROPHONE_VOLUME_MUTE=24`nMute the microphone.`nAPPCOMMAND_MICROPHONE_VOLUME_UP=26`nDecrease microphone volume.`nAPPCOMMAND_NEW=29Create a new window.`nAPPCOMMAND_OPEN=30`nOpen a window.`nAPPCOMMAND_PASTE=38`nPaste`nAPPCOMMAND_PRINT=33`nPrint current document.`nAPPCOMMAND_REDO=35`nRedo last action.`nAPPCOMMAND_REPLY_TO_MAIL=39`nReply to a mail message.`nAPPCOMMAND_SAVE=32`nSave current document.`nAPPCOMMAND_SEND_MAIL=41`nSend a mail message.`nAPPCOMMAND_SPELL_CHECK=42`nInitiate a spell check.`nAPPCOMMAND_TREBLE_DOWN=22`nDecrease the treble.`nAPPCOMMAND_TREBLE_UP=23`nIncrease the treble.`nAPPCOMMAND_UNDO=34`nUndo last action.`nAPPCOMMAND_VOLUME_DOWN=9`nLower the volume.`nAPPCOMMAND_VOLUME_MUTE=8`nMute the volume.`nAPPCOMMAND_VOLUME_UP=10`nRaise the volume.`n`nThe uDevice component indicates the input device that generated the input event, and can be one of the following values.`n`nValue	Meaning`nFAPPCOMMAND_KEY=0`nUser pressed a key.`nFAPPCOMMAND_MOUSE=0x8000`nUser clicked a mouse button.`nFAPPCOMMAND_OEM=0x1000`nAn unidentified hardware source generated the event. It could be a mouse or a keyboard event.`n`nThe dwKeys component indicates whether various virtual keys are down, and can be one or more of the following values.`n`nValue	Meaning`nMK_CONTROL=0x0008`nThe CTRL key is down.`nMK_LBUTTON=0x0001`nThe left mouse button is down.`nMK_MBUTTON=0x0010`nThe middle mouse button is down.`nMK_RBUTTON=0x0002`nThe right mouse button is down.`nMK_SHIFT=0x0004`nThe SHIFT key is down.`nMK_XBUTTON1=0x0020`nThe first X button is down.`nMK_XBUTTON2=0x0040
WM_ASKCBFORMATNAME=(0x30C) message is sent to the clipboard owner by a clipboard viewer window to request the name of a CF_OWNERDISPLAY clipboard format.
WM_ADSPROP_NOTIFY_APPLY=
WM_ADSPROP_NOTIFY_CHANGE=
WM_ADSPROP_NOTIFY_ERROR=
WM_ADSPROP_NOTIFY_EXIT=
WM_ADSPROP_NOTIFY_FOREGROUND=
WM_ADSPROP_NOTIFY_PAGEHWND=
WM_ADSPROP_NOTIFY_PAGEINIT=
WM_ADSPROP_NOTIFY_SETFOCUS=
WM_ADSPROP_SHEET_CREATE=
WM_CANCELJOURNAL=(0x4B) message is posted to an application when a user cancels the application's journaling activities. The message is posted with a NULL window handle.
WM_CANCELMODE=(0x1F) message is sent to cancel certain modes, such as mouse capture. For example, the system sends this message to the active window when a dialog box or message box is displayed. Certain functions also send this message explicitly to the specified window regardless of whether it is the active window. For example, the EnableWindow function sends this message when disabling the specified window.
WM_CAP_ABORT=
WM_CAP_DLG_VIDEOCOMPRESSION=
WM_CAP_DLG_VIDEODISPLAY=
WM_CAP_DLG_VIDEOFORMAT=
WM_CAP_DLG_VIDEOSOURCE=
WM_CAP_DRIVER_CONNECT=
WM_CAP_DRIVER_DISCONNECT=
WM_CAP_DRIVER_GET_CAPS=
WM_CAP_DRIVER_GET_NAME=
WM_CAP_DRIVER_GET_VERSION=
WM_CAP_EDIT_COPY=
WM_CAP_FILE_ALLOCATE=
WM_CAP_FILE_GET_CAPTURE_FILE=
WM_CAP_FILE_SAVEAS=
WM_CAP_FILE_SAVEDIB=
WM_CAP_FILE_SET_CAPTURE_FILE=
WM_CAP_FILE_SET_INFOCHUNK=
WM_CAP_GET_AUDIOFORMAT=
WM_CAP_GET_MCI_DEVICE=
WM_CAP_GET_SEQUENCE_SETUP=
WM_CAP_GET_STATUS=
WM_CAP_GET_USER_DATA=
WM_CAP_GET_VIDEOFORMAT=
WM_CAP_GRAB_FRAME=
WM_CAP_GRAB_FRAME_NOSTOP=
WM_CAP_PAL_AUTOCREATE=
WM_CAP_PAL_MANUALCREATE=
WM_CAP_PAL_OPEN=
WM_CAP_PAL_PASTE=
WM_CAP_PAL_SAVE=
WM_CAP_SEQUENCE=
WM_CAP_SEQUENCE_NOFILE=
WM_CAP_SET_AUDIOFORMAT=
WM_CAP_SET_CALLBACK_CAPCONTROL=
WM_CAP_SET_CALLBACK_ERROR=
WM_CAP_SET_CALLBACK_FRAME=
WM_CAP_SET_CALLBACK_STATUS=
WM_CAP_SET_CALLBACK_VIDEOSTREAM=
WM_CAP_SET_CALLBACK_WAVESTREAM=
WM_CAP_SET_CALLBACK_YIELD=
WM_CAP_SET_MCI_DEVICE=
WM_CAP_SET_OVERLAY=
WM_CAP_SET_PREVIEW=
WM_CAP_SET_PREVIEWRATE=
WM_CAP_SET_SCALE=
WM_CAP_SET_SCROLL=
WM_CAP_SET_SEQUENCE_SETUP=
WM_CAP_SET_USER_DATA=
WM_CAP_SET_VIDEOFORMAT=
WM_CAP_SINGLE_FRAME=
WM_CAP_SINGLE_FRAME_CLOSE=
WM_CAP_SINGLE_FRAME_OPEN=
WM_CAP_STOP=
WM_CAPTURECHANGED=(0x215) message is sent to the window that is losing the mouse capture.
WM_CHANGECBCHAIN=(0x30D) message is sent to the first window in the clipboard viewer chain when a window is being removed from the chain.
WM_CHANGEUISTATE=(0x127) An application sends the WM_CHANGEUISTATE message to indicate that the user interface (UI) state should be changed.
WM_CHAR=(0x102) message is posted to the window with the keyboard focus when a WM_KEYDOWN message is translated by the TranslateMessage function. The WM_CHAR message contains the character code of the key that was pressed.
WM_CHARTOITEM=(0x2F) Sent by a list box with the LBS_WANTKEYBOARDINPUT style to its owner in response to a WM_CHAR message.
WM_CHILDACTIVATE=(0x22) message is sent to a child window when the user clicks the window's title bar or when the window is activated, moved, or sized.
WM_CHOOSEFONT_GETLOGFONT=
WM_CHOOSEFONT_SETFLAGS=
WM_CHOOSEFONT_SETLOGFONT=
WM_CLEAR=(0x303) An application sends a WM_CLEAR message to an edit control or combo box to delete (clear) the current selection, if any, from the edit control.
WM_CLOSE=(0x10) message is sent as a signal that a window or an application should terminate.
WM_COMMAND=(0x111) message is sent when the user selects a command item from a menu, when a control sends a notification message to its parent window, or when an accelerator keystroke is translated.
WM_COMPACTING=(0x41) message is sent to all top-level windows when the system detects more than 12.5 percent of system time over a 30- to 60-second interval is being spent compacting memory. This indicates that system memory is low.
WM_COMPAREITEM=(0x39) The system sends the WM_COMPAREITEM message to determine the relative position of a new item in the sorted list of an owner-drawn combo box or list box. Whenever the application adds a new item, the system sends this message to the owner of a combo box or list box created with the CBS_SORT or LBS_SORT style.
WM_CONTEXTMENU=(0x7B) message notifies a window that the user clicked the right mouse button (right-clicked) in the window.
WM_COPY=(0x301) An application sends the WM_COPY message to an edit control or combo box to copy the current selection to the clipboard in CF_TEXT format.
WM_COPYDATA=(0x4A) An application sends the WM_COPYDATA message to pass data to another application.
WM_CPL_LAUNCH=
WM_CPL_LAUNCHED=
WM_CREATE=(0x1) message is sent when an application requests that a window be created by calling the CreateWindowEx or CreateWindow function. (The message is sent before the function returns.) The window procedure of the new window receives this message after the window is created, but before the window becomes visible.
WM_CTLCOLORBTN=(0x135) message is sent to the parent window of a button before drawing the button. The parent window can change the button's text and background colors. However, only owner-drawn buttons respond to the parent window processing this message.
WM_CTLCOLORDLG=(0x136) message is sent to a dialog box before the system draws the dialog box. By responding to this message, the dialog box can set its text and background colors using the specified display device context handle.
WM_CTLCOLOREDIT=(0x133) An edit control that is not read-only or disabled sends the WM_CTLCOLOREDIT message to its parent window when the control is about to be drawn. By responding to this message, the parent window can use the specified device context handle to set the text and background colors of the edit control.
WM_CTLCOLORLISTBOX=(0x134) Sent to the parent window of a list box before the system draws the list box. By responding to this message, the parent window can set the text and background colors of the list box by using the specified display device context handle.
WM_CTLCOLORMSGBOX=(0x132) message is sent to the owner window of a message box before Windows draws the message box. By responding to this message, the owner window can set the text and background colors of the message box by using the given display device context handle.
WM_CTLCOLORSCROLLBAR=(0x137) message is sent to the parent window of a scroll bar control when the control is about to be drawn. By responding to this message, the parent window can use the display context handle to set the background color of the scroll bar control.
WM_CTLCOLORSTATIC=(0x138) A static control, or an edit control that is read-only or disabled, sends the WM_CTLCOLORSTATIC message to its parent window when the control is about to be drawn. By responding to this message, the parent window can use the specified device context handle to set the text and background colors of the static control.
WM_CUT=(0x300) An application sends a WM_CUT message to an edit control or combo box to delete (cut) the current selection, if any, in the edit control and copy the deleted text to the clipboard in CF_TEXT format.
WM_DDE_ACK=
WM_DDE_ADVISE=
WM_DDE_DATA=
WM_DDE_EXECUTE=
WM_DDE_INITIATE=
WM_DDE_POKE=
WM_DDE_REQUEST=
WM_DDE_TERMINATE=
WM_DDE_UNADVISE=
WM_DEADCHAR=(0x103) message is posted to the window with the keyboard focus when a WM_KEYUP message is translated by the TranslateMessage function. WM_DEADCHAR specifies a character code generated by a dead key. A dead key is a key that generates a character, such as the umlaut (double-dot), that is combined with another character to form a composite character. For example, the umlaut-O character (Ö) is generated by typing the dead key for the umlaut character, and then typing the O key.
WM_DELETEITEM=(0x2D) Sent to the owner of a list box or combo box when the list box or combo box is destroyed or when items are removed by the LB_DELETESTRING, LB_RESETCONTENT, CB_DELETESTRING, or CB_RESETCONTENT message. The system sends a WM_DELETEITEM message for each deleted item. The system sends the WM_DELETEITEM message for any deleted list box or combo box item with nonzero item data.
WM_DESTROY=(0x2) message is sent when a window is being destroyed. It is sent to the window procedure of the window being destroyed after the window is removed from the screen. This message is sent first to the window being destroyed and then to the child windows (if any) as they are destroyed. During the processing of the message, it can be assumed that all child windows still exist.
WM_DESTROYCLIPBOARD=(0x307) message is sent to the clipboard owner when a call to the EmptyClipboard function empties the clipboard.
WM_DEVICECHANGE=(0x219) Notifies an application of a change to the hardware configuration of a device or the computer.
WM_DEVMODECHANGE=(0x1B) message is sent to all top-level windows whenever the user changes device-mode settings.
WM_DISPLAYCHANGE=(0x7E) message is sent to all windows when the display resolution has changed.
WM_DRAWCLIPBOARD=(0x308) message is sent to the first window in the clipboard viewer chain when the content of the clipboard changes. This enables a clipboard viewer window to display the new content of the clipboard.
WM_DRAWITEM=(0x2B) message is sent to the parent window of an owner-drawn button, combo box, list box, or menu when a visual aspect of the button, combo box, list box, or menu has changed.
WM_DROPFILES=(0x233) Sent when the user drops a file on the window of an application that has registered itself as a recipient of dropped files.
WM_DSA_SHEET_CLOSE_NOTIFY=
WM_DSA_SHEET_CREATE_NOTIFY=
WM_ENABLE=(0xA) message is sent when an application changes the enabled state of a window. It is sent to the window whose enabled state is changing. This message is sent before the EnableWindow function returns, but after the enabled state (WS_DISABLED style bit) of the window has changed.
WM_ENDSESSION=(0x16) message is sent to an application after the system processes the results of the WM_QUERYENDSESSION message. The WM_ENDSESSION message informs the application whether the session is ending.
WM_ENTERIDLE=(0x121) message is sent to the owner window of a modal dialog box or menu that is entering an idle state. A modal dialog box or menu enters an idle state when no messages are waiting in its queue after it has processed one or more previous messages.
WM_ENTERMENULOOP=(0x211) message informs an application's main window procedure that a menu modal loop has been entered.
WM_ENTERSIZEMOVE=(0x231)  message is sent one time to a window after it enters the moving or sizing modal loop. The window enters the moving or sizing modal loop when the user clicks the window's title bar or sizing border, or when the window passes the WM_SYSCOMMAND message to the DefWindowProc function and the wParam parameter of the message specifies the SC_MOVE or SC_SIZE value. The operation is complete when DefWindowProc returns.
WM_ERASEBKGND=(0x14) message is sent when the window background must be erased (for example, when a window is resized). The message is sent to prepare an invalidated portion of a window for painting.
WM_EXITMENULOOP=(0x212) message informs an application's main window procedure that a menu modal loop has been exited.
WM_EXITSIZEMOVE=(0x232) message is sent one time to a window, after it has exited the moving or sizing modal loop. The window enters the moving or sizing modal loop when the user clicks the window's title bar or sizing border, or when the window passes the WM_SYSCOMMAND message to the DefWindowProc function and the wParam parameter of the message specifies the SC_MOVE or SC_SIZE value. The operation is complete when DefWindowProc returns.
WM_FAX_MESSAGE=
WM_FONTCHANGE=(0x1D) An application sends the WM_FONTCHANGE message to all top-level windows in the system after changing the pool of font resources.
WM_GETDLGCODE=(0x87) message is sent to the window procedure associated with a control. By default, the system handles all keyboard input to the control; the system interprets certain types of keyboard input as dialog box navigation keys. To override this default behavior, the control can respond to the WM_GETDLGCODE message to indicate the types of input it wants to process itself.
WM_GETFONT=(0x31) An application sends a WM_GETFONT message to a control to retrieve the font with which the control is currently drawing its text.
WM_GETHOTKEY=(0x33) An application sends a WM_GETHOTKEY message to determine the hot key associated with a window.
WM_GETICON=(0x7F) message is sent to a window to retrieve a handle to the large or small icon associated with a window. The system displays the large icon in the ALT+TAB dialog, and the small icon in the window caption.
WM_GETMINMAXINFO=(0x24) message is sent to a window when the size or position of the window is about to change. An application can use this message to override the window's default maximized size and position, or its default minimum or maximum tracking size.
WM_GETOBJECT=(0x3D) Active Accessibility sends the WM_GETOBJECT message to obtain information about an accessible object contained in a server application. Applications never send this message directly. It is sent only by Active Accessibility in response to calls to AccessibleObjectFromPoint, AccessibleObjectFromEvent, or AccessibleObjectFromWindow. However, server applications handle this message.
WM_GETTEXT=(0xD) An application sends a WM_GETTEXT message to copy the text that corresponds to a window into a buffer provided by the caller.
WM_GETTEXTLENGTH=(0xE) An application sends a WM_GETTEXTLENGTH message to determine the length, in characters, of the text associated with a window.
WM_HANDHELDFIRST=(0x358) Definition Needed
WM_HANDHELDLAST=(0x35F) Definition Needed
WM_HELP=(0x53) Indicates that the user pressed the F1 key. If a menu is active when F1 is pressed, WM_HELP is sent to the window associated with the menu; otherwise, WM_HELP is sent to the window that has the keyboard focus. If no window has the keyboard focus, WM_HELP is sent to the currently active window.
WM_HOTKEY=(0x312) message is posted when the user presses a hot key registered by the RegisterHotKey function. The message is placed at the top of the message queue associated with the thread that registered the hot key.
WM_HSCROLL=(0x114) This message is sent to a window when a scroll event occurs in the window's standard horizontal scroll bar. This message is also sent to the owner of a horizontal scroll bar control when a scroll event occurs in the control.
WM_HSCROLLCLIPBOARD=(0x30E) message is sent to the clipboard owner by a clipboard viewer window. This occurs when the clipboard contains data in the CF_OWNERDISPLAY format and an event occurs in the clipboard viewer's horizontal scroll bar. The owner should scroll the clipboard image and update the scroll bar values.
WM_ICONERASEBKGND=(0x27) Windows NT 3.51 and earlier: The WM_ICONERASEBKGND message is sent to a minimized window when the background of the icon must be filled before painting the icon. A window receives this message only if a class icon is defined for the window; otherwise, WM_ERASEBKGND is sent. This message is not sent by newer versions of Windows.
WM_IME_CHAR=(0x286) Sent to an application when the IME gets a character of the conversion result. A window receives this message through its WindowProc function.
WM_IME_COMPOSITION=(0x10F) Sent to an application when the IME changes composition status as a result of a keystroke. A window receives this message through its WindowProc function.
WM_IME_COMPOSITIONFULL=(0x284) Sent to an application when the IME window finds no space to extend the area for the composition window. A window receives this message through its WindowProc function.
WM_IME_CONTROL=(0x283) Sent by an application to direct the IME window to carry out the requested command. The application uses this message to control the IME window that it has created. To send this message, the application calls the SendMessage function with the following parameters.
WM_IME_ENDCOMPOSITION=(0x10E) Sent to an application when the IME ends composition. A window receives this message through its WindowProc function.
WM_IME_KEYDOWN=(0x290) Sent to an application by the IME to notify the application of a key press and to keep message order. A window receives this message through its WindowProc function.
WM_IME_KEYLAST=(0x10F) Definition Needed
WM_IME_KEYUP=(0x291) Sent to an application by the IME to notify the application of a key release and to keep message order. A window receives this message through its WindowProc function.
WM_IME_NOTIFY=(0x282) Sent to an application to notify it of changes to the IME window. A window receives this message through its WindowProc function.
WM_IME_REQUEST=(0x288) Sent to an application to provide commands and request information. A window receives this message through its WindowProc function.
WM_IME_SELECT=(0x285) Sent to an application when the operating system is about to change the current IME. A window receives this message through its WindowProc function.
WM_IME_SETCONTEXT=(0x281) Sent to an application when a window is activated. A window receives this message through its WindowProc function.
WM_IME_STARTCOMPOSITION=(0x10D) Sent immediately before the IME generates the composition string as a result of a keystroke. A window receives this message through its WindowProc function.
WM_INITDIALOG=(0x110) message is sent to the dialog box procedure immediately before a dialog box is displayed. Dialog box procedures typically use this message to initialize controls and carry out any other initialization tasks that affect the appearance of the dialog box.
WM_INITMENU=(0x116) message is sent when a menu is about to become active. It occurs when the user clicks an item on the menu bar or presses a menu key. This allows the application to modify the menu before it is displayed.
WM_INITMENUPOPUP=(0x117) message is sent when a drop-down menu or submenu is about to become active. This allows an application to modify the menu before it is displayed, without changing the entire menu.
WM_INPUT=
WM_INPUTLANGCHANGE=(0x51) message is sent to the topmost affected window after an application's input language has been changed. You should make any application-specific settings and pass the message to the DefWindowProc function, which passes the message to all first-level child windows. These child windows can pass the message to DefWindowProc to have it pass the message to their child windows, and so on.
WM_INPUTLANGCHANGEREQUEST=(0x50) message is posted to the window with the focus when the user chooses a new input language, either with the hotkey (specified in the Keyboard control panel application) or from the indicator on the system taskbar. An application can accept the change by passing the message to the DefWindowProc function or reject the change (and prevent it from taking place) by returning immediately.
WM_KEYDOWN=(0x100) message is posted to the window with the keyboard focus when a nonsystem key is pressed. A nonsystem key is a key that is pressed when the ALT key is not pressed.
WM_KEYFIRST=(0x100) This message filters for keyboard messages.
WM_KEYLAST=(0x108) This message filters for keyboard messages.
WM_KEYUP=(0x101) message is posted to the window with the keyboard focus when a nonsystem key is released. A nonsystem key is a key that is pressed when the ALT key is not pressed, or a keyboard key that is pressed when a window has the keyboard focus.
WM_KILLFOCUS=(0x8) message is sent to a window immediately before it loses the keyboard focus.
WM_LBUTTONDBLCLK=(0x203) message is posted when the user double-clicks the left mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
WM_LBUTTONDOWN=(0x201) message is posted when the user presses the left mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
WM_LBUTTONUP=(0x202) message is posted when the user releases the left mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
WM_MBUTTONDBLCLK=(0x209) message is posted when the user double-clicks the middle mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
WM_MBUTTONDOWN=(0x207) message is posted when the user presses the middle mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
WM_MBUTTONUP=(0x208) message is posted when the user releases the middle mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
WM_MDIACTIVATE=(0x222) An application sends the WM_MDIACTIVATE message to a multiple-document interface (MDI) client window to instruct the client window to activate a different MDI child window.`n`nwParam: A handle to the MDI child window to be activated.`nlParam: This parameter is not used.`n`nReturn value`nType: LRESULT`nIf an application sends this message to an MDI client window, the return value is zero.`nAn MDI child window should return zero if it processes this message.`n`nRemarks: As the client window processes this message, it sends WM_MDIACTIVATE to the child window being deactivated and to the child window being activated. The message parameters received by an MDI child window are as follows:`nwParam: A handle to the MDI child window being deactivated.`nlParam: A handle to the MDI child window being activated.`n
An MDI child window is activated independently of the MDI frame window. When the frame window becomes active, the child window last activated by using the WM_MDIACTIVATE message receives the WM_NCACTIVATE message to draw an active window frame and title bar; the child window does not receive another WM_MDIACTIVATE message.`n`nRequirements`nMinimum supported client: Windows 2000 Professional [desktop apps only]`nMinimum supported server: Windows 2000 Server [desktop apps only]`nHeader: Winuser.h (include Windows.h)`n
WM_MDICASCADE=(0x227) An application sends the WM_MDICASCADE message to a multiple-document interface (MDI) client window to arrange all its child windows in a cascade format.
WM_MDICREATE=(0x220) An application sends the WM_MDICREATE message to a multiple-document interface (MDI) client window to create an MDI child window.
WM_MDIDESTROY=(0x221) An application sends the WM_MDIDESTROY message to a multiple-document interface (MDI) client window to close an MDI child window.
WM_MDIGETACTIVE=(0x229) An application sends the WM_MDIGETACTIVE message to a multiple-document interface (MDI) client window to retrieve the handle to the active MDI child window.
WM_MDIICONARRANGE=(0x228) An application sends the WM_MDIICONARRANGE message to a multiple-document interface (MDI) client window to arrange all minimized MDI child windows. It does not affect child windows that are not minimized.
WM_MDIMAXIMIZE=(0x225) An application sends the WM_MDIMAXIMIZE message to a multiple-document interface (MDI) client window to maximize an MDI child window. The system resizes the child window to make its client area fill the client window. The system places the child window's window menu icon in the rightmost position of the frame window's menu bar, and places the child window's restore icon in the leftmost position. The system also appends the title bar text of the child window to that of the frame window.
WM_MDINEXT=(0x224) An application sends the WM_MDINEXT message to a multiple-document interface (MDI) client window to activate the next or previous child window.
WM_MDIREFRESHMENU=(0x234) An application sends the WM_MDIREFRESHMENU message to a multiple-document interface (MDI) client window to refresh the window menu of the MDI frame window.
WM_MDIRESTORE=(0x223) An application sends the WM_MDIRESTORE message to a multiple-document interface (MDI) client window to restore an MDI child window from maximized or minimized size.
WM_MDISETMENU=(0x230) An application sends the WM_MDISETMENU message to a multiple-document interface (MDI) client window to replace the entire menu of an MDI frame window, to replace the window menu of the frame window, or both.
WM_MDITILE=(0x226) An application sends the WM_MDITILE message to a multiple-document interface (MDI) client window to arrange all of its MDI child windows in a tile format.
WM_MEASUREITEM=(0x2C) message is sent to the owner window of a combo box, list box, list view control, or menu item when the control or menu is created.
WM_MENUCHAR=(0x120) message is sent when a menu is active and the user presses a key that does not correspond to any mnemonic or accelerator key. This message is sent to the window that owns the menu.
WM_MENUCOMMAND=(0x126) message is sent when the user makes a selection from a menu.
WM_MENUDRAG=(0x123) message is sent to the owner of a drag-and-drop menu when the user drags a menu item.
WM_MENUGETOBJECT=(0x124) message is sent to the owner of a drag-and-drop menu when the mouse cursor enters a menu item or moves from the center of the item to the top or bottom of the item.
WM_MENURBUTTONUP=(0x122) message is sent when the user releases the right mouse button while the cursor is on a menu item.
WM_MENUSELECT=(0x11F) message is sent to a menu's owner window when the user selects a menu item.
WM_MOUSEACTIVATE=(0x21) message is sent when the cursor is in an inactive window and the user presses a mouse button. The parent window receives this message only if the child window passes it to the DefWindowProc function.
WM_MOUSEHOVER=(0x2A1) message is posted to a window when the cursor hovers over the client area of the window for the period of time specified in a prior call to TrackMouseEvent.
WM_MOUSELAST=(0x20D) Definition Needed
WM_MOUSELEAVE=(0x2A3) message is posted to a window when the cursor leaves the client area of the window specified in a prior call to TrackMouseEvent.
WM_MOUSEMOVE=(0x200) message is posted to a window when the cursor moves. If the mouse is not captured, the message is posted to the window that contains the cursor. Otherwise, the message is posted to the window that has captured the mouse.
WM_MOUSEWHEEL=(0x20A) message is sent to the focus window when the mouse wheel is rotated. The DefWindowProc function propagates the message to the window's parent. There should be no internal forwarding of the message, since DefWindowProc propagates it up the parent chain until it finds a window that processes it.
WM_MOUSEHWHEEL=(0x20E) message is sent to the focus window when the mouse's horizontal scroll wheel is tilted or rotated. The DefWindowProc function propagates the message to the window's parent. There should be no internal forwarding of the message, since DefWindowProc propagates it up the parent chain until it finds a window that processes it.
WM_MOVE=(0x3) message is sent after a window has been moved.
WM_MOVING=(0x216) message is sent to a window that the user is moving. By processing this message, an application can monitor the position of the drag rectangle and, if needed, change its position.
WM_NCACTIVATE=(0x86) Non Client Area Activated Caption(Title) of the Form
WM_NCCALCSIZE=(0x83) message is sent when the size and position of a window's client area must be calculated. By processing this message, an application can control the content of the window's client area when the size or position of the window changes.
WM_NCCREATE=(0x81) message is sent prior to the WM_CREATE message when a window is first created.
WM_NCDESTROY=(0x82) message informs a window that its nonclient area is being destroyed. The DestroyWindow function sends the WM_NCDESTROY message to the window following the WM_DESTROY message. WM_DESTROY is used to free the allocated memory object associated with the window.
WM_NCHITTEST=(0x84) message is sent to a window when the cursor moves, or when a mouse button is pressed or released. If the mouse is not captured, the message is sent to the window beneath the cursor. Otherwise, the message is sent to the window that has captured the mouse.
WM_NCLBUTTONDBLCLK=(0xA3) message is posted when the user double-clicks the left mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
WM_NCLBUTTONDOWN=(0xA1) message is posted when the user presses the left mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
WM_NCLBUTTONUP=(0xA2) message is posted when the user releases the left mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
WM_NCMBUTTONDBLCLK=(0xA9) message is posted when the user double-clicks the middle mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
WM_NCMBUTTONDOWN=(0xA7) message is posted when the user presses the middle mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
WM_NCMBUTTONUP=(0xA8) message is posted when the user releases the middle mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
WM_NCMOUSEHOVER=(0x2A0) message is posted to a window when the cursor hovers over the nonclient area of the window for the period of time specified in a prior call to TrackMouseEvent.
WM_NCMOUSELEAVE=(0x2A2) message is posted to a window when the cursor leaves the nonclient area of the window specified in a prior call to TrackMouseEvent.
WM_NCMOUSEMOVE=(0xA0) message is posted to a window when the cursor is moved within the nonclient area of the window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
WM_NCPAINT=(0x85) message is sent to a window when its frame must be painted.
WM_NCRBUTTONDBLCLK=(0xA6) message is posted when the user double-clicks the right mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
WM_NCRBUTTONDOWN=(0xA4) message is posted when the user presses the right mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
WM_NCRBUTTONUP=(0xA5) message is posted when the user releases the right mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
WM_NCXBUTTONDBLCLK=(0xAD) message is posted when the user double-clicks the first or second X button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
WM_NCXBUTTONDOWN=(0xAB) message is posted when the user presses the first or second X button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
WM_NCXBUTTONUP=(0xAC) message is posted when the user releases the first or second X button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
WM_NCUAHDRAWCAPTION=(0xAE) message is an undocumented message related to themes. When handling WM_NCPAINT, this message should also be handled.
WM_NCUAHDRAWFRAME=(0xAF) message is an undocumented message related to themes. When handling WM_NCPAINT, this message should also be handled.
WM_NEXTDLGCTL=(0x28) message is sent to a dialog box procedure to set the keyboard focus to a different control in the dialog box
WM_NEXTMENU=(0x213) message is sent to an application when the right or left arrow key is used to switch between the menu bar and the system menu.
WM_NOTIFY=(0x4E) Sent by a common control to its parent window when an event has occurred or the control requires some information.
WM_NOTIFYFORMAT=(0x55) Determines if a window accepts ANSI or Unicode structures in the WM_NOTIFY notification message. WM_NOTIFYFORMAT messages are sent from a common control to its parent window and from the parent window to the common control.
WM_NULL=(0x0) message performs no operation. An application sends the WM_NULL message if it wants to post a message that the recipient window will ignore.
WM_PAINT=(0xF) Occurs when the control needs repainting
WM_PAINTCLIPBOARD=(0x309) message is sent to the clipboard owner by a clipboard viewer window when the clipboard contains data in the CF_OWNERDISPLAY format and the clipboard viewer's client area needs repainting.
WM_PAINTICON=(0x26) Windows NT 3.51 and earlier: The WM_PAINTICON message is sent to a minimized window when the icon is to be painted. This message is not sent by newer versions of Microsoft Windows, except in unusual circumstances explained in the Remarks.
WM_PALETTECHANGED=(0x311) This message is sent by the OS to all top-level and overlapped windows after the window with the keyboard focus realizes its logical palette. This message enables windows that do not have the keyboard focus to realize their logical palettes and update their client areas.
WM_PALETTEISCHANGING=(0x310) message informs applications that an application is going to realize its logical palette.
WM_PARENTNOTIFY=(0x210) message is sent to the parent of a child window when the child window is created or destroyed, or when the user clicks a mouse button while the cursor is over the child window. When the child window is being created, the system sends WM_PARENTNOTIFY just before the CreateWindow or CreateWindowEx function that creates the window returns. When the child window is being destroyed, the system sends the message before any processing to destroy the window takes place.
WM_PASTE=(0x302) An application sends a WM_PASTE message to an edit control or combo box to copy the current content of the clipboard to the edit control at the current caret position. Data is inserted only if the clipboard contains data in CF_TEXT format.
WM_PENWINFIRST=(0x380) Definition Needed
WM_PENWINLAST=(0x38F) Definition Needed
WM_POWER=(0x48) Notifies applications that the system, typically a battery-powered personal computer, is about to enter a suspended mode. Obsolete : use POWERBROADCAST instead
WM_POWERBROADCAST=(0x218) Notifies applications that a power-management event has occurred.
WM_PRINT=(0x317) message is sent to a window to request that it draw itself in the specified device context, most commonly in a printer device context.
WM_PRINTCLIENT=(0x318) message is sent to a window to request that it draw its client area in the specified device context, most commonly in a printer device context.
WM_PSD_ENVSTAMPRECT=
WM_PSD_FULLPAGERECT=
WM_PSD_GREEKTEXTRECT=
WM_PSD_MARGINRECT=
WM_PSD_MINMARGINRECT=
WM_PSD_PAGESETUPDLG=
WM_PSD_YAFULLPAGERECT=
WM_QUERYDRAGICON=(0x37) message is sent to a minimized (iconic) window. The window is about to be dragged by the user but does not have an icon defined for its class. An application can return a handle to an icon or cursor. The system displays this cursor or icon while the user drags the icon.
WM_QUERYENDSESSION=(0x11) message is sent when the user chooses to end the session or when an application calls one of the system shutdown functions. If any application returns zero, the session is not ended. The system stops sending WM_QUERYENDSESSION messages as soon as one application returns zero. After processing this message, the system sends the WM_ENDSESSION message with the wParam parameter set to the results of the WM_QUERYENDSESSION message.
WM_QUERYNEWPALETTE=(0x30F) This message informs a window that it is about to receive the keyboard focus, giving the window the opportunity to realize its logical palette when it receives the focus.
WM_QUERYOPEN=(0x13) message is sent to an icon when the user requests that the window be restored to its previous size and position.
WM_QUEUESYNC=(0x23) message is sent by a computer-based training (CBT) application to separate user-input messages from other messages sent through the WH_JOURNALPLAYBACK Hook procedure.
WM_QUIT=(0x12) Once received, it ends the application's Message Loop, signaling the application to end. It can be sent by pressing Alt+F4, Clicking the X in the upper right-hand of the program, or going to File->Exit.
WM_RBUTTONDBLCLK=(0x206) he WM_RBUTTONDBLCLK message is posted when the user double-clicks the right mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
WM_RBUTTONDOWN=(0x204) message is posted when the user presses the right mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
WM_RBUTTONUP=(0x205) message is posted when the user releases the right mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
WM_RENDERALLFORMATS=(0x306) message is sent to the clipboard owner before it is destroyed, if the clipboard owner has delayed rendering one or more clipboard formats. For the content of the clipboard to remain available to other applications, the clipboard owner must render data in all the formats it is capable of generating, and place the data on the clipboard by calling the SetClipboardData function.
WM_RENDERFORMAT=(0x305) message is sent to the clipboard owner if it has delayed rendering a specific clipboard format and if an application has requested data in that format. The clipboard owner must render data in the specified format and place it on the clipboard by calling the SetClipboardData function.
WM_SETCURSOR=(0x20) message is sent to a window if the mouse causes the cursor to move within a window and mouse input is not captured.
WM_SETFOCUS=(0x7) When the controll got the focus
WM_SETFONT=(0x30) An application sends a WM_SETFONT message to specify the font that a control is to use when drawing text.
WM_SETHOTKEY=(0x32) An application sends a WM_SETHOTKEY message to a window to associate a hot key with the window. When the user presses the hot key, the system activates the window.
WM_SETICON=(0x80) An application sends the WM_SETICON message to associate a new large or small icon with a window. The system displays the large icon in the ALT+TAB dialog box, and the small icon in the window caption.
WM_SETREDRAW=(0xB) An application sends the WM_SETREDRAW message to a window to allow changes in that window to be redrawn or to prevent changes in that window from being redrawn.
WM_SETTEXT=(0xC) Text / Caption changed on the control. An application sends a WM_SETTEXT message to set the text of a window.
WM_SETTINGCHANGE=(0x1A) An application sends the WM_SETTINGCHANGE message to all top-level windows after making a change to the WIN.INI file. The SystemParametersInfo function sends this message after an application uses the function to change a setting in WIN.INI.
WM_SHOWWINDOW=(0x18) message is sent to a window when the window is about to be hidden or shown
WM_SIZE=(0x5) message is sent to a window after its size has changed.
WM_SIZECLIPBOARD=(0x30B) message is sent to the clipboard owner by a clipboard viewer window when the clipboard contains data in the CF_OWNERDISPLAY format and the clipboard viewer's client area has changed size.
WM_SIZING=(0x214) message is sent to a window that the user is resizing. By processing this message, an application can monitor the size and position of the drag rectangle and, if needed, change its size or position.
WM_SPOOLERSTATUS=(0x2A) message is sent from Print Manager whenever a job is added to or removed from the Print Manager queue.
WM_STYLECHANGED=(0x7D) message is sent to a window after the SetWindowLong function has changed one or more of the window's styles.
WM_STYLECHANGING=(0x7C) message is sent to a window when the SetWindowLong function is about to change one or more of the window's styles.
WM_SYNCPAINT=(0x88) message is used to synchronize painting while avoiding linking independent GUI threads.
WM_SYSCHAR=(0x106) message is posted to the window with the keyboard focus when a WM_SYSKEYDOWN message is translated by the TranslateMessage function. It specifies the character code of a system character key — that is, a character key that is pressed while the ALT key is down.
WM_SYSCOLORCHANGE=(0x15) This message is sent to all top-level windows when a change is made to a system color setting.
WM_SYSCOMMAND=(0x112) A window receives this message when the user chooses a command from the Window menu (formerly known as the system or control menu) or when the user chooses the maximize button, minimize button, restore button, or close button.
WM_SYSDEADCHAR=
WM_SYSDEADCHAR=(0x107) message is sent to the window with the keyboard focus when a WM_SYSKEYDOWN message is translated by the TranslateMessage function. WM_SYSDEADCHAR specifies the character code of a system dead key — that is, a dead key that is pressed while holding down the ALT key.
WM_SYSKEYDOWN=(0x104) message is posted to the window with the keyboard focus when the user presses the F10 key (which activates the menu bar) or holds down the ALT key and then presses another key. It also occurs when no window currently has the keyboard focus; in this case, the WM_SYSKEYDOWN message is sent to the active window. The window that receives the message can distinguish between these two contexts by checking the context code in the lParam parameter.
WM_SYSKEYUP=(0x105) message is posted to the window with the keyboard focus when the user releases a key that was pressed while the ALT key was held down. It also occurs when no window currently has the keyboard focus; in this case, the WM_SYSKEYUP message is sent to the active window. The window that receives the message can distinguish between these two contexts by checking the context code in the lParam parameter.
WM_TCARD=(0x52) Sent to an application that has initiated a training card with Microsoft Windows Help. The message informs the application when the user clicks an authorable button. An application initiates a training card by specifying the HELP_TCARD command in a call to the WinHelp function.
WM_TIMECHANGE=(0x1E) A message that is sent whenever there is a change in the system time.
WM_TIMER=(0x113) message is posted to the installing thread's message queue when a timer expires. The message is posted by the GetMessage or PeekMessage function.
WM_UNDO=(0x304) An application sends a WM_UNDO message to an edit control to undo the last operation. When this message is sent to an edit control, the previously deleted text is restored or the previously added text is deleted.
WM_UNINITMENUPOPUP=(0x125) message is sent when a drop-down menu or submenu has been destroyed.
WM_USER=(0x400) constant is used by applications to help define private messages for use by private window classes, usually of the form WM_USER+X, where X is an integer value.
WM_USERCHANGED=(0x54) message is sent to all windows after the user has logged on or off. When the user logs on or off, the system updates the user-specific settings. The system sends this message immediately after updating the settings.
WM_VKEYTOITEM=(0x2E) Sent by a list box with the LBS_WANTKEYBOARDINPUT style to its owner in response to a WM_KEYDOWN message.
WM_VSCROLL=(0x115) message is sent to a window when a scroll event occurs in the window's standard vertical scroll bar. This message is also sent to the owner of a vertical scroll bar control when a scroll event occurs in the control.
WM_VSCROLLCLIPBOARD=(0x30A) message is sent to the clipboard owner by a clipboard viewer window when the clipboard contains data in the CF_OWNERDISPLAY format and an event occurs in the clipboard viewer's vertical scroll bar. The owner should scroll the clipboard image and update the scroll bar values.
WM_WINDOWPOSCHANGED=(0x47) message is sent to a window whose size, position, or place in the Z order has changed as a result of a call to the SetWindowPos function or another window-management function.
WM_WINDOWPOSCHANGING=(0x46) message is sent to a window whose size, position, or place in the Z order is about to change as a result of a call to the SetWindowPos function or another window-management function.
WM_WININICHANGE=(0x1A) An application sends the WM_WININICHANGE message to all top-level windows after making a change to the WIN.INI file. The SystemParametersInfo function sends this message after an application uses the function to change a setting in WIN.INI. Note The WM_WININICHANGE message is provided only for compatibility with earlier versions of the system. Applications should use the WM_SETTINGCHANGE message.
WM_XBUTTONDBLCLK=(0x20D) message is posted when the user double-clicks the first or second X button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
WM_XBUTTONDOWN=(0x20B) message is posted when the user presses the first or second X button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
WM_XBUTTONUP=(0x20C) message is posted when the user releases the first or second X button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.

ACM_OPEN=Open AVI clip and display first frame
ACM_PLAY=Play AVI clip
ACM_STOP=Stop AVI playback

CB_ADDSTRING=`nAdds a string to the list box of a combo box. If the combo box does not have the CBS_SORT style, the string is added to the end of the list. Otherwise, the string is inserted into the list, and the list is sorted.`n`nParameters`nwParam:`nThis parameter is not used.`n`nlParam: `nAn LPCTSTR pointer to the null-terminated string to be added. If you create the combo box with an owner-drawn style but without the CBS_HASSTRINGS style, the value of the lParam parameter is stored as item data rather than the string it would otherwise point to. The item data can be retrieved or modified by sending the CB_GETITEMDATA or CB_SETITEMDATA message.`n`nReturn value:`nThe return value is the zero-based index to the string in the list box of the combo box. If an error occurs, the return value is CB_ERR. If insufficient space is available to store the new string, it is CB_ERRSPACE.`n`nRemarks:`nIf you create an owner-drawn combo box with the CBS_SORT style but without the CBS_HASSTRINGS style, the WM_COMPAREITEM message is sent one or more times to the owner of the combo box so the new item can be properly placed in the list.`n`nTo insert a string at a specific location within the list, use the CB_INSERTSTRING message.`n`nIf the combo box has WS_HSCROLL style and you add a string wider than the combo box, send a LB_SETHORIZONTALEXTENT message to ensure the horizontal scroll bar appears.`n`nComclt32.dll version 5.0 or later: If CBS_LOWERCASE or CBS_UPPERCASE is set, the Unicode version of CB_ADDSTRING alters the string. If using read-only global memory, this causes the application to fail.
CB_DELETESTRING=Delete string in the list box of the combo box
CB_FINDSTRINGEXACT=Find the first specified string in the combo box
CB_GETCOUNT=Retrieve the number of items in the combo box
CB_GETCURSEL=Retrieve the index of the currently selected item
CB_GETDROPPEDCONTROLRECT=Retrieve the screen coordinates of the drop-down list box
CB_GETDROPPEDSTATE=Determine whether the combo box is dropped down
CB_GETEXTENDEDUI=Determine if combo box has the default or extended user interface
CB_GETITEMDATA=Retrieve the application-supplied 32-bit associated item value
CB_GETITEMHEIGHT=Determine the height of the list items or selection field
CB_GETLBTEXT=Retrieve a string from the list of the combo box
CB_GETLBTEXTLEN=Retrieve the length of a string in the list of the combo box
CB_LIMITTEXT=Limit the text length the user may type into the combo box edit field
CB_RESETCONTENT=Remove all items from the combo box
CB_SELECTSTRING=Search the list for an item that begins with a specified string
CB_SETCURSEL=Select a string in the combo box list
CB_SETDROPPEDWITH=Set the maximum allowable width of the combo box width
CB_SETEXTENDEDUI=Select the default or extended user interface for the combo box
CB_SETHORIZONTALEXTENT=`nto set the width, in pixels, by which a list box can be scrolled horizontally (the scrollable width).`nIf the width of the list box is smaller than this value, the horizontal scroll bar horizontally scrolls items in the list box. If the width of the list box is equal to or greater than this value, the horizontal scroll bar is hidden or, if the combo box has the CBS_DISABLENOSCROLL style, disabled.
CB_SETITEMDATA=Set the 32-bit value associated with the combo box item
CB_SETITEMHEIGHT=Set the height of the list items or selection field of the combo box
CB_SETLOCALE=An application sends a CB_SETLOCALE message to set the current locale of the combo box.`nIf the combo box has the CBS_SORT style and strings are added using CB_ADDSTRING, the locale of a combo box affects how list items are sorted.
CB_SETLOCALE_LINK=https://docs.microsoft.com/en-us/windows/win32/controls/cb-setlocale
CB_SHOWDROPDOWN=Show or hide the list box of the combo box

CBEM_DELETEITEM=Remove combo box item (Mapped to CB_DELETESTRING)
CBEM_GETCOMBOCONTROL=Return handle to the child combo box control
CBEM_GETEDITCONTROL=Return handle to the edit box portion of the ComboBoxEx control
CBEM_GETEXTENDEDSTYLE=Retrieve the extended styles of the control
CBEM_GETIMAGELIST=Retrieve the handle of the associated image list
CBEM_GETITEM=Retrieve item information
CBEM_GETUNICODEFORMAT=Gets Unicode format flag (Mapped to CCM_GETUNICODEFORMAT)
CBEM_HASEDITCHANGED=Determines if user changed contents of the combo box edit control
CBEM_INSERTITEM=Insert a new item
CBEM_SETEXTENDEDSTYLE=Set extended styles of the control
CBEM_SETIMAGELIST=Set associated image list
CBEM_SETITEM=Set the attributes of an item
CBEM_SETUNICODEFORMAT=Sets Unicode format flag (Mapped to CCM_SETUNICODEFORMAT)

DM_GETDEFID=Retrieves the identifier of the default push button control for a dialog box.`n`n#define WM_USER              0x0400`n#define DM_GETDEFID         (WM_USER+0)`nhttps://docs.microsoft.com/en-us/windows/win32/dlgbox/dm-getdefid`nParameters`nwParam: This parameter is not used and must be zero.`nlParam: This parameter is not used and must be zero.`nReturn value: If a default push button exists, the high-order word of the return value contains the value DC_HASDEFID and the low-order word contains the control identifier. Otherwise, the return value is zero.`n`nRemarks: The DefDlgProc function processes this message.`n`nRequirements: Minimum supported client: Windows 2000 Professional [desktop apps only]`nMinimum supported server: Windows 2000 Server [desktop apps only]`nHeader: Winuser.h (include Windows.h)
DTM_GETMCCOLOR=Return current colors of the child month calendar
DTM_GETMCFONT=Return font of child month calendar
DTM_GETMONTHCAL=Return the handle to the child month calendar control
DTM_GETRANGE=Return the current minimum and maximum allowable system times
DTM_GETSYSTEMTIME=Return currently selected date and time
DTM_SETFORMAT=Set the date and time display format
DTM_SETMCCOLOR=Set colors of child month calendar
DTM_SETMCFONT=Set font of child month calendar
DTM_SETRANGE=Set the minimum and maximum allowable times
DTM_SETSYSTEMTIME=Set date and time

HDM_CREATEDRAGIMAGE=Create semi-transparent version of item image used for dragging
HDM_DELETEITEM=Delete item
HDM_GETIMAGELIST=Retrieve associated image list
HDM_GETITEM=Return information about item
HDM_GETITEMCOUNT=Return count of items
HDM_GETITEMRECT=Retrieve bounding rectangle for a given item
HDM_GETORDERARRAY=Retrieve current left-to-right order of items
HDM_GETUNICODEFORMAT=Return UNICODE character format flag (Mapped to CCM_GETUNICODEFORMAT)
HDM_HITTEST=Determine which item is at specified point
HDM_INSERTITEM=Insert new item
HDM_LAYOUT=Retrieve correct size and position of control with respect to parent window
HDM_ORDERTOINDEX=Return index value based on order
HDM_SETHOTDIVIDER=Change color of a specified divider between items
HDM_SETIMAGELIST=Assign image list to control
HDM_SETITEM=Set attributes of specified item
HDM_SETORDERARRAY=Set left-to-right order of items
HDM_SETUNICODEFORMAT=Set UNICODE character format flag (Mapped to CCM_SETUNICODEFORMAT)

HKM_GETHOTKEY=Return virtual key code and modifier flags
HKM_SETHOTKEY=Set hot key combination
HKM_SETRULES=Define invalid and default modifier combinations

IPM_CLEARADDRESS=Clear contents
IPM_GETADDRESS=Retrieve address values for all four fields
IPM_ISBLANK=Determine if all fields in control are blank
IPM_SETADDRESS=Set address values for all fields
IPM_SETFOCUS=Set focus to field
IPM_SETRANGE=Set valid range for specified field

LB_ADDFILE=Add filename to list
LB_ADDSTRING=Add string to list
LB_DELETESTRING=Remove string from list
LB_DIR=Add a list of filenames
LB_FINDSTRING=Locate first string that contains specified prefix
LB_FINDSTRINGEXACT=Locate first exact string match
LB_GETANCHORINDEX=Retrieve index of multiple selection anchor item
LB_GETCARETINDEX=Retrieve index of item with focus rectangle
LB_GETCOUNT=Retrieve item count
LB_GETCURSEL=Retrieve index of currently selected item
LB_GETHORIZONTALEXTENT=Retrieve scrollable width
LB_GETITEMDATA=Retrieve application-defined associated item value
LB_GETITEMHEIGHT=Retrieve item height
LB_GETITEMRECT=Retrieve dimensions of bounding item rectangle
LB_GETLOCALE=Retrieve current locale
LB_GETSEL=Retrieve selection state of an item
LB_GETSELCOUNT=Retrieve total number of selected items
LB_GETSELITEMS=Fill integer buffer with multiple selection indices
LB_GETTEXT=Retrieve item string
LB_GETTEXTLEN=Retrieve character length of item
LB_GETTOPINDEX=Retrieve index of first visible item
LB_INITSTORAGE=Pre-allocate memory for storage of a large number of items
LB_INSERTSTRING=Insert string
LB_ITEMFROMPOINT=Retrieve index of item nearest specified point
LB_RESETCONTENT=Remove all items
LB_SELECTSTRING=Search for item that begins with specified characters and select if found
LB_SELITEMRANGE=Select one or more consecutive items
LB_SELITEMRANGEEX=Select one or more consecutive items (extended)
LB_SETANCHORINDEX=Set multiple selection anchor item
LB_SETCARETINDEX=Set focus rectangle on multiple selection item
LB_SETCOLUMNWIDTH=Set column multi-column width
LB_SETCOUNT=Set count of items
LB_SETCURSEL=Select an item and scroll it into view
LB_SETHORIZONTALEXTENT=Set scrollable width
LB_SETITEMDATA=Set application-defined associated item value
LB_SETITEMHEIGHT=Set item height
LB_SETLOCALE=Set current locale
LB_SETSEL=Select a multiple selection item
LB_SETTABSTOPS=Set tab-stop positions
LB_SETTOPINDEX=Ensure an item is visible

LVM_APPROXIMATEVIEWRECT=Calculate approximate dimensions required to display a number of items
LVM_ARRANGE=Arrange items in icon view
LVM_CREATEDRAGIMAGE=Create drag image list for specified item
LVM_DELETEALLITEMS=Remove all items
LVM_DELETECOLUMN=Remove column
LVM_DELETEITEM=Remove item
LVM_EDITLABEL=Begin in-place editing of specified item text
LVM_ENSUREVISIBLE=Ensure item is either entirely or partially visible
LVM_FINDITEM=Search for item with specified characteristics
LVM_GETBKCOLOR=Retrieve background color
LVM_GETBKIMAGE=Retrieve background image
LVM_GETCALLBACKMASK=Retrieve callback mask
LVM_GETCOLUMN=Retrieve attributes of a column
LVM_GETCOLUMNORDERARRAY=Retrieve current left-to-right column ordering
LVM_GETCOLUMNWIDTH=Return width of specified column in report or list view
LVM_GETCOUNTPERPAGE=Calculate number of items that can fit vertically while in report view
LVM_GETEDITCONTROL=Retrieve handle to edit control being used to edit text
LVM_GETEXTENDEDLISTVIEWSTYLE=Retrieve extended styles currently in use
LVM_GETHEADER=Return handle to header control being used
LVM_GETHOTCURSOR=Retrieve handle to cursor used while hot tracking is enabled
LVM_GETHOTITEM=Retrieve index of hot item
LVM_GETHOVERTIME=Return time cursor must hover oven an item before selection in hot tracking mode
LVM_GETIMAGELIST=Return handle to associated image lists
LVM_GETISEARCHSTRING=Retrieve incremental search string
LVM_GETITEM=Retrieve some or all of an item's attributes
LVM_GETITEMCOUNT=Return current number of items
LVM_GETITEMPOSITION=Return position of item
LVM_GETITEMRECT=Retrieve bounding rectangle for all or part of an item
LVM_GETITEMSPACING=Determine spacing amount between items
LVM_GETITEMSTATE=Retrieve state of an item
LVM_GETITEMTEXT=Return text associated with an item or subitem
LVM_GETNEXTITEM=Search for an item that has specified properties and relationship to another item
LVM_GETNUMBEROFWORKAREAS=Return number of working areas
LVM_GETORIGIN=Return current view origin
LVM_GETSELECTEDCOUNT=Determine number of selected items
LVM_GETSELECTIONMARK=Retrieve selection mark where multiple selection starts
LVM_GETSTRINGWIDTH=Determine width of specified string using the control's font
LVM_GETSUBITEMRECT=Retrieve information about bounding rectangle for a subitem
LVM_GETTEXTBKCOLOR=Return text background color
LVM_GETTEXTCOLOR=Return text color
LVM_GETTOOLTIPS=Return handle to associated tooltip control
LVM_GETTOPINDEX=Retrieve index of the topmost visible item when in list or report view
LVM_GETUNICODEFORMAT=Return UNICODE character format flag (Mapped to CCM_GETUNICODEFORMAT)
LVM_GETVIEWRECT=Retrieve bounding rectangle for all items in control
LVM_GETWORKAREAS=Retrieve working areas from control
LVM_HITTEST=Determine which item (if any) exists at specified position
LVM_INSERTCOLUMN=Insert a new column
LVM_INSERTITEM=Insert a new item
LVM_REDRAWITEMS=Force items in a range to redraw
LVM_SCROLL=Scroll contents
LVM_SETBKCOLOR=Set background color
LVM_SETBKIMAGE=Set background image
LVM_SETCALLBACKMASK=Change callback mask for all items in control
LVM_SETCOLUMN=Set attributes of a column
LVM_SETCOLUMNORDERARRAY=Set left-to-right order of columns
LVM_SETCOLUMNWIDTH=Change width of a column in report or list view
LVM_SETEXTENDEDLISTVIEWSTYLE=Set extended styles currently in use
LVM_SETHOTCURSOR=Set hot cursor used for hot tracking
LVM_SETHOTITEM=Set current hot item
LVM_SETHOVERTIME=Set time needed to hover over an item before it is selected during hot tracking
LVM_SETICONSPACING=Set spacing between icons while in icon view
LVM_SETIMAGELIST=Set associated image lists
LVM_SETITEM=Sets some or all of a list-view item's attributes. You can also send LVM_SETITEM to set the text of a subitem. You can send this message explicitly or by using the ListView_SetItem macro.`n`nwParam:`nMust be zero.`n`nlParam:`nPointer to an LVITEM structure that contains the new item attributes. The iItem and iSubItem members identify the item or subitem, and the mask member specifies which attributes to set. If the mask member specifies the LVIF_TEXT value, the pszText member is the address of a null-terminated string and the cchTextMax member is ignored. If the mask member specifies the LVIF_STATE value, the stateMask member specifies which item states to change and the state member contains the values for those states.`n`nReturn value:`nReturns TRUE if successful, or FALSE otherwise.`n`nRemarks:`nTo set the attributes of a list-view item, set the iItem member of the LVITEM structure to the index of the item, and set the iSubItem member to zero. For an item, you can set the state, pszText, iImage, and lParam members of the LVITEM structure.`nTo set the text of a subitem, set the iItem and iSubItem members to indicate the specific subitem, and use the pszText member to specify the text. Alternatively, you can use the ListView_SetItemText macro to set the text of a subitem. You cannot set the state or lParam members for subitems because subitems do not have these attributes. In version 4.70 and later, you can set the iImage member for subitems. The subitem image will be displayed if the list-view control has the LVS_EX_SUBITEMIMAGES extended style. Previous versions will ignore the subitem image.
LVM_SETITEMCOUNT=Set item count (allocate item memory or set virtual item count)
LVM_SETITEMPOSITION=Move item to a specified position
LVM_SETITEMPOSITION32=Move item to a specified position (32-bit coordinates)
LVM_SETITEMSTATE=Changes the state of an item in a list-view control. You can send this message explicitly or by using the ListView_SetItemState macro.`n`nwParam:`nIndex of the list-view item. If this parameter is -1, then the state change is applied to all items.`n`nlParam:`nPointer to an LVITEM structure. The stateMask member specifies which state bits to change, and the state member contains the new values for those bits. The other members are ignored.`n`nReturn value:`nIf you send this message explicitly, it returns TRUE if successful or FALSE otherwise.`n`nRemarks:`nAn item's state value includes a set of bit flags that indicate the item's state. The state value can also include image list indexes that indicate the item's state image and overlay image.`nRequirements: `nMinimum supported client: Windows Vista [desktop apps only]`nMinimum supported server: Windows Server 2003 [desktop apps only]`nHeader: Commctrl.h
LVM_SETITEMTEXT=Set text associated with an item or subitem
LVM_SETSELECTIONMARK=Set selection mark in control
LVM_SETTEXTBKCOLOR=Set text background color
LVM_SETTEXTCOLOR=Set text color
LVM_SETTOOLTIPS=Set associated tooltip control
LVM_SETUNICODEFORMAT=Set UNICODE character format flag (Mapped to CCM_SETUNICODEFORMAT)
LVM_SETVIEW=Sets the view of a list-view control.`n`nwParam:`n**DWORD** that specifies the view.`n`nlParam:`nMust be zero.`nReturn value:`nReturns 1 if successful, or -1 otherwise. For example, -1 is returned if the view is invalid.`n`nRemarks:`nFollowing are the values for views.`n`nLV_VIEW_DETAILS`nLV_VIEW_ICON`nLV_VIEW_LIST`nLV_VIEW_SMALLICON`nLV_VIEW_TILE`n`n!Note!:`nTo use this message, you must provide a manifest specifying Comctl32.dll version 6.0. For more information on manifests, see Enabling Visual Styles.
LVM_SETWORKAREAS=Set working areas within control
LVM_SORTITEMS=Sort items based on an application-defined comparison function
LVM_SUBITEMHITTEST=Determine which item or subitem is at a given position
LVM_UPDATE=Update an item

MCM_GETCOLOR=Retrieve color for a given portion of the control
MCM_GETCURSEL=Retrieve currently selected date
MCM_GETFIRSTDAYOFWEEK=Return first day of the week
MCM_GETMAXSELCOUNT=Return the maximum date range that can be selected
MCM_GETMAXTODAYWIDTH="Return maximum width in pixels of ""today"" string "
MCM_GETMINREQRECT=Retrieve minimum size required to display a full month
MCM_GETMONTHDELTA=Return scroll rate
MCM_GETMONTHRANGE=Retrieve high and low limit of display
MCM_GETRANGE=Return minimum and maximum allowable dates
MCM_GETSELRANGE=Retrieve upper and lower limits of the date range currently selected
MCM_GETTODAY="Retrieve ""today"" date information "
MCM_GETUNICODEFORMAT=Return UNICODE character format flag (Mapped to CCM_GETUNICODEFORMAT)
MCM_HITTEST=Determine which portion of control is at specified point
MCM_SETCOLOR=Set color for a given portion of the control
MCM_SETCURSEL=Set currently selected date
MCM_SETDAYSTATE=Set day state for all visible months
MCM_SETFIRSTDAYOFWEEK=Set the first day of the week
MCM_SETMAXSELCOUNT=Set maximum number of days that may be selected
MCM_SETMONTHDELTA=Set scroll rate
MCM_SETRANGE=Set minimum and maximum allowable dates
MCM_SETSELRANGE=Set selection to a given date range
MCM_SETTODAY="Set ""today"" section "
MCM_SETUNICODEFORMAT=Set UNICODE character format flag (Mapped to CCM_SETUNICODEFORMAT)

PBM_DELTAPOS=Advance by specified increment and redraw
PBM_GETPOS=Retrieve current position
PBM_GETRANGE=Retrieve information about the current high and low limits
PBM_SETBARCOLOR=Set color of indicator bar
PBM_SETBKCOLOR=Set background color
PBM_SETPOS=Set current position and redraw
PBM_SETRANGE=Set minimum and maximum values
PBM_SETRANGE32=Set 32-bit range
PBM_SETSTEP=Specify step increment
PBM_STEPIT=Advance current position by step and redraw

PGM_FORWARDMOUSE=Enable or disable mouse forwarding
PGM_GETBKCOLOR=Return current background color
PGM_GETBORDER=Return current border size
PGM_GETBUTTONSIZE=Return current button size
PGM_GETBUTTONSTATE=Return state of specified button
PGM_GETDROPTARGET=Retrieve drop target interface pointer (Mapped to CCM_GETDROPTARGET)
PGM_GETPOS=Return current scroll position
PGM_RECALCSIZE=Force size recalculation of contained window
PGM_SETBKCOLOR=Set current background color
PGM_SETBORDER=Set current border size
PGM_SETBUTTONSIZE=Set button size
PGM_SETCHILD=Set contained window
PGM_SETPOS=Set current scroll position

PSM_ADDPAGE=Add new page to the end of the sheet
PSM_APPLY=Simulate selection of the Apply button
PSM_CANCELTOCLOSE=Disable Cancel button and change text of Ok button to Close
PSM_CHANGED=Inform sheet that information in a page has changed
PSM_GETCURRENTPAGEHWND=Retrieve handle to window of current page
PSM_GETTABCONTROL=Retrieve underlying Property Sheet control
PSM_ISDIALOGMESSAGE=Pass message to sheet
PSM_PRESSBUTTON=Simulate selection of a button
PSM_QUERYSIBLINGS=Pass message to all pages
PSM_REBOOTSYSTEM=Specify that the system needs to be restarted for changes to take effect
PSM_REMOVEPAGE=Remove page
PSM_RESTARTWINDOWS=Specify that Windows needs to be restarted for changed to take effect
PSM_SETCURSEL=Activate page
PSM_SETCURSELID=Activate page based on identifier
PSM_SETFINISHTEXT=Set text of the Finish button in a wizard property sheet
PSM_SETTITLE=Set title of sheet
PSM_SETWIZBUTTONS=Enable or disable Back Next and Finish buttons in a wizard property sheet
PSM_UNCHANGED=Specify that information in a page has reverted to a previous saved state

RB_BEGINDRAG=Place control in drag-and-drop mode
RB_DELETEBAND=Remove band
RB_DRAGMOVE=Update drag position in control
RB_ENDDRAG=Terminate drag-and-drop operation
RB_GETBANDBORDERS=Retrieve borders of a band
RB_GETBANDCOUNT=Return band count
RB_GETBANDINFO=Return information about a specified band
RB_GETBARHEIGHT=Return height of control
RB_GETBARINFO=Return information about the control and the image list it uses
RB_GETBKCOLOR=Return background color
RB_GETCOLORSCHEME=Return color scheme information (Mapped to CCM_GETCOLORSCHEME)
RB_GETDROPTARGET=Retrieve drop target interface pointer (Mapped to CCM_GETDROPTARGET)
RB_GETPALETTE=Return current palette
RB_GETRECT=Return bounding rectangle for a given band
RB_GETROWCOUNT=Return number of rows of bands
RB_GETROWHEIGHT=Return height of a specified row
RB_GETTEXTCOLOR=Return default text color
RB_GETTOOLTIPS=Return handle of associated tooltip control
RB_GETUNICODEFORMAT=Return UNICODE character format flag (Mapped to CCM_GETUNICODEFORMAT)
RB_HITTEST=Determine which portion of a band is at a given point on the screen
RB_IDTOINDEX=Convert band identifier to index
RB_INSERTBAND=Insert a new band
RB_MAXIMIZEBAND=Resize band to its ideal or largest size
RB_MINIMIZEBAND=Resize band to its smallest size
RB_MOVEBAND=Move band from one index to another
RB_SETBANDINFO=Set characteristics of an existing band
RB_SETBARINFO=Set characteristics of the control
RB_SETBKCOLOR=Set default background color
RB_SETCOLORSCHEME=Set color scheme information of control (Mapped to CCM_SETCOLORSCHEME)
RB_SETPALETTE=Set the current palette
RB_SETPARENT=Set parent window
RB_SETTEXTCOLOR=Set default text color
RB_SETTOOLTIPS=Associate tooltip control
RB_SETUNICODEFORMAT=Set UNICODE character format flag (Mapped to CCM_SETUNICODEFORMAT)
RB_SHOWBAND=Show or hide a given band
RB_SIZETORECT=Find best layout of bands for given rectangle

SB_GETBORDERS=Return current horizontal and vertical border width
SB_GETICON=Return handle of specified icon
SB_GETPARTS=Retrieve count of parts
SB_GETRECT=Retrieve bounding rectangle of part
SB_GETTEXT=Retrieve text of specified part
SB_GETTEXTLENGTH=Return character length of text in specified part
SB_GETTIPTEXT=Return tooltip text for specified part
SB_GETUNICODEFORMAT=Return UNICODE character format flag (Mapped to CCM_GETUNICODEFORMAT)
SB_ISSIMPLE=Determine if in simple mode
SB_SETBKCOLOR=Set background color
SB_SETICON=Set icon of part
SB_SETMINHEIGHT=Set minimum height of drawing area
SB_SETPARTS=Set widths and number of parts
SB_SETTEXT=Set text in specified part
SB_SETTIPTEXT=Set tooltip text of specified part
SB_SETUNICODEFORMAT=Set UNICODE character format flag (Mapped to CCM_SETUNICODEFORMAT)
SB_SIMPLE=Set simple property

TB_ADDBITMAP=Add one or more images to list of available button images
TB_ADDBUTTONS=Add one or more buttons
TB_ADDSTRING=Add new string to list of available strings
TB_AUTOSIZE=Force resize
TB_BUTTONCOUNT=Retrieve button count
TB_BUTTONSTRUCTSIZE=Make known size of TBBUTTON structure
TB_CHANGEBITMAP=Change bitmap associated with a button
TB_CHECKBUTTON=Check or uncheck a given button
TB_COMMANDTOINDEX=Return zero-based index of button associated with command identifier
TB_CUSTOMIZE=Display Customize dialog box
TB_DELETEBUTTON=Remove a button
TB_ENABLEBUTTON=Enables or disables a specified button
TB_GETANCHORHIGHLIGHT=Return anchor highlight setting
TB_GETBITMAP=Return index of bitmap associated with a button
TB_GETBITMAPFLAGS=Returns flags for current bitmap
TB_GETBUTTON=Return information about a specified button
TB_GETBUTTONINFO=Return extended information about a specified button
TB_GETBUTTONSIZE=Retrieve dimensions of buttons
TB_GETBUTTONTEXT=Return text associated with a button
TB_GETCOLORSCHEME=Return color scheme information (Mapped to CCM_GETCOLORSCHEME)
TB_GETDISABLEDIMAGELIST=Return handle to disabled button image list
TB_GETEXTENDEDSTYLE=Return extended styles
TB_GETHOTIMAGELIST=Return handle to hot button image list
TB_GETHOTITEM=Return index of hot item
TB_GETIMAGELIST=Return handle to the default state image list
TB_GETINSERTMARK=Return current insertion mark
TB_GETINSERTMARKCOLOR=Return color used to draw insertion mark
TB_GETITEMRECT=Retrieve bounding rectangle of a button (except hidden buttons)
TB_GETMAXSIZE=Return total size of all visible buttons and separators
TB_GETOBJECT=Retrieves IDropTarget interface
TB_GETPADDING=Returns padding setting
TB_GETRECT=Return bounding rectangle of a specified button
TB_GETROWS=Return number of rows of buttons
TB_GETSTATE=Return button state information
TB_GETSTYLE=Return current control styles
TB_GETTEXTROWS=Return maximum number of text rows that can be displayed on a button
TB_GETTOOLTIPS=Retrieve handle of the tooltip control
TB_GETUNICODEFORMAT=Return UNICODE character format flag (Mapped to CCM_GETUNICODEFORMAT)
TB_HIDEBUTTON=Hide or show specified button
TB_HITTEST=Determine where point lies in control
TB_INDETERMINATE=Sets or clears indeterminate button state
TB_INSERTBUTTON=Insert a button
TB_INSERTMARKHITTEST=Retrieves insertion mark information for a point
TB_ISBUTTONCHECKED=Determines if button is checked
TB_ISBUTTONENABLED=Determines if button is enabled
TB_ISBUTTONHIDDEN=Determines if button is hidden
TB_ISBUTTONHIGHLIGHTED=Determines if button is highlighted
TB_ISBUTTONINDETERMINATE=Determines if button is indeterminate
TB_ISBUTTONPRESSED=Determines if button is pressed
TB_LOADIMAGES=Load bitmaps in control's image list
TB_MAPACCELERATOR=Maps an accelerator character to a button
TB_MARKBUTTON=Set highlight state of a given button
TB_MOVEBUTTON=Move button from one index to another
TB_PRESSBUTTON=Presses or releases a specified button
TB_REPLACEBITMAP=Replace an existing bitmap with a new bitmap
TB_SAVERESTORE=Save or restore the state of the control
TB_SETANCHORHIGHLIGHT=Set the anchor highlight setting
TB_SETBITMAPSIZE=Set size of bitmap images
TB_SETBUTTONINFO=Set information for an existing button
TB_SETBUTTONSIZE=Set size of buttons to be added to control
TB_SETBUTTONWIDTH=Set the minimum and maximum button widths
TB_SETCMDID=Set the command identifier of a button
TB_SETCOLORSCHEME=Set the color scheme information of control (Mapped to CCM_SETCOLORSCHEME)
TB_SETDISABLEDIMAGELIST=Set image list for displaying disabled buttons
TB_SETDRAWTEXTFLAGS=Set text drawing flags of control
TB_SETEXTENDEDSTYLE=Set extended styles of control
TB_SETHOTIMAGELIST=Set image list for displaying hot buttons
TB_SETHOTITEM=Set current hot item
TB_SETIMAGELIST=Set image list for displaying normal buttons
TB_SETINDENT=Set indentation for first button in control
TB_SETINSERTMARK=Set current insertion mark
TB_SETINSERTMARKCOLOR=Set color used for insertion mark
TB_SETMAXTEXTROWS=Set maximum number of text rows for display
TB_SETPADDING=Set padding for control
TB_SETPARENT=Set destination of notification messages
TB_SETROWS=Set number of rows of buttons
TB_SETSTATE=Set state of button
TB_SETSTYLE=Set style of control
TB_SETTOOLTIPS=Associate tooltip control
TB_SETUNICODEFORMAT=Return UNICODE character format flag (Mapped to CCM_GETUNICODEFORMAT)

TBM_CLEARSEL=Clear current selection range
TBM_CLEARTICS=Remove current tick marks
TBM_GETBUDDY=Retrieve handle to buddy window
TBM_GETCHANNELRECT=Retrieve bounding rectangle of channel
TBM_GETLINESIZE=Retrieve number of logical positions slider moves in response to arrow keys
TBM_GETNUMTICS=Retrieve number of tick marks
TBM_GETPAGESIZE=Retrieve number of logical positions slider moves in response to page up/down keys
TBM_GETPOS=Return logical position
TBM_GETPTICS=Retrieve pointer to array of positions of tick marks
TBM_GETRANGEMAX=Retrieve maximum position for slider
TBM_GETRANGEMIN=Retrieve minimum position for slider
TBM_GETSELEND=Retrieve ending position of current selection range
TBM_GETSELSTART=Retrieve starting position of current selection range
TBM_GETTHUMBLENGTH=Retrieve length of the slider
TBM_GETTHUMBRECT=Retrieve bounding rectangle of slider
TBM_GETTIC=Retrieve logical position of a tick mark
TBM_GETTICPOS=Retrieve current physical position of a tick mark
TBM_GETTOOLTIPS=Retrieve handle of assigned tooltip control
TBM_GETUNICODEFORMAT=Return UNICODE character format flag (Mapped to CCM_GETUNICODEFORMAT)
TBM_SETBUDDY=Assign buddy window
TBM_SETLINESIZE=Set number of logical positions slider moves in response to arrow keys
TBM_SETPAGESIZE=Set number of logical positions slider moves in response to page up/down keys
TBM_SETPOS=Set logical position
TBM_SETRANGE=Set range of minimum and maximum logical positions of slider
TBM_SETRANGEMAX=Set maximum logical position of slider
TBM_SETRANGEMIN=Set minimum logical position of slider
TBM_SETSEL=Set starting and ending logical positions for current selection range
TBM_SETSELEND=Set ending logical position of current selection range
TBM_SETSELSTART=Set starting logical position of current selection range
TBM_SETTHUMBLENGTH=Set length of the slider
TBM_SETTIC=Set tick mark a specified logical position
TBM_SETTICFREQ=Set interval frequency for tick marks
TBM_SETTIPSIDE=Position tooltip control
TBM_SETTOOLTIPS=Set associated tooltip control
TBM_SETUNICODEFORMAT=Set UNICODE character format flag (Mapped to CCM_SETUNICODEFORMAT)

TCM_ADJUSTRECT=Calculate display area given a window rectangle
TCM_DELETEALLITEMS=Remove all items
TCM_DELETEITEM=Remove a specified item
TCM_DESELECTALL=Reset items
TCM_GETCURFOCUS=Return index of item that has current focus
TCM_GETCURSEL=Return current selection
TCM_GETEXTENDEDSTYLE=Return extended styles currently in use
TCM_GETIMAGELIST=Return handle to associated image list
TCM_GETITEM=Return information about an item
TCM_GETITEMCOUNT=Return item count
TCM_GETITEMRECT=Return bounding rectangle of item
TCM_GETROWCOUNT=Return current number of rows
TCM_GETTOOLTIPS=Return handle associated image list
TCM_GETUNICODEFORMAT=Return UNICODE character format flag (Mapped to CCM_GETUNICODEFORMAT)
TCM_HIGHLIGHTITEM=Set highlight state of an item
TCM_HITTEST=Determine which item if any is at a specified screen coordinate
TCM_INSERTITEM=Insert a new item
TCM_REMOVEIMAGE=Remove image from associated image list
TCM_SETCURFOCUS=Set focus to a specified item
TCM_SETCURSEL=Select item
TCM_SETEXTENDEDSTYLE=Set extended styles
TCM_SETIMAGELIST=Assign image list
TCM_SETITEM=Set some or all item attributes
TCM_SETITEMEXTRA=Set number of bytes per item reserved for application-defined data
TCM_SETITEMSIZE=Set item width and height
TCM_SETMINTABWIDTH=Set minimum width of item
TCM_SETPADDING=Set amount of padding space around item's text and icon
TCM_SETTOOLTIPS=Assign tooltip control
TCM_SETUNICODEFORMAT=Set UNICODE character format flag (Mapped to CCM_SETUNICODEFORMAT)

TTM_ACTIVATE=Activate or deactivate control
TTM_ADDTOOL=Register tool
TTM_DELTOOL=Remove tool
TTM_ENUMTOOLS=Retrieve tool information by index
TTM_GETCURRENTTOOL=Retrieve information about the current tool
TTM_GETDELAYTIME=Retrieve initial pop-up or reshow duration
TTM_GETMARGIN=Retrieve top left bottom and right display margin
TTM_GETMAXTIPWIDTH=Retrieve maximum ideal display window width
TTM_GETTEXT=Retrieve tool text
TTM_GETTIPBKCOLOR=Retrieve control background color
TTM_GETTIPTEXTCOLOR=Retrieve control text color
TTM_GETTOOLCOUNT=Retrieve registered tool count
TTM_GETTOOLINFO=Retrieve tool information
TTM_HITTEST=Test point to determine if within specified tool
TTM_NEWTOOLRECT=Set a new bounding rectangle for a tool
TTM_POP=Remove display window
TTM_RELAYEVENT=Pass mouse message to control
TTM_SETDELAYTIME=Set initial pop-up or reshow duration
TTM_SETMARGIN=Set top left bottom and right display margin
TTM_SETMAXTIPWIDTH=Set maximum ideal display window width
TTM_SETTIPBKCOLOR=Set control background color
TTM_SETTIPTEXTCOLOR=Set control text color
TTM_SETTOOLINFO=Set tool information
TTM_TRACKACTIVATE=Activate or deactivate tracking mode
TTM_TRACKPOSITION=Set tracking position
TTM_UPDATE=Force display window to be redrawn
TTM_UPDATETIPTEXT=Set tool text
TTM_WINDOWFROMPOINT=Used for displaying text for a tool other than that beneath the cursor

TVM_CREATEDRAGIMAGE=Create a dragged bitmap image
TVM_DELETEITEM=Remove an item from the tree
TVM_EDITLABEL=Begin in-place editing of an item
TVM_ENDEDITLABELNOW=Terminate editing of an item
TVM_ENSUREVISIBLE=Ensure item is visible
TVM_EXPAND=Expand or collape a parent's child items
TVM_GETBKCOLOR=Return the current background color
TVM_GETCOUNT=Return count of items
TVM_GETEDITCONTROL=Return handle to in-place edit control
TVM_GETIMAGELIST=Return handle to the associated normal or state image list
TVM_GETINDENT=Return indention distance between parent and child items
TVM_GETINSERTMARKCOLOR=Return color used to draw the insertion mark
TVM_GETISEARCHSTRING=Return incrememtal search string
TVM_GETITEM=Return some or all of an items attributes
TVM_GETITEMHEIGHT=Return current height of an item
TVM_GETITEMRECT=Return bounding rectangle of an item and indicate whether its visible
TVM_GETNEXTITEM=Return item that has the specified relationship to the given item
TVM_GETSCROLLTIME=Return maximum scroll time
TVM_GETTEXTCOLOR=Return current text color
TVM_GETTOOLTIPS=Return handle to child tool tip control
TVM_GETUNICODEFORMAT=Return UNICODE character format flag (Mapped to CCM_GETUNICODEFORMAT)
TVM_GETVISIBLECOUNT=Return number of fully visible items
TVM_HITTEST=Return item handle that occupies specified point
TVM_INSERTITEM=Insert a new item
TVM_SELECTITEM=Select scroll to or redraw item
TVM_SETBKCOLOR=Set the background color
TVM_SETIMAGELIST=Associate normal or state image list
TVM_SETINDENT=Set width of indention between parent items and their children
TVM_SETINSERTMARK=Set insertion mark
TVM_SETINSERTMARKCOLOR=Set color used to draw the insertion mark
TVM_SETITEM=Set some or all of an items attributes
TVM_SETITEMHEIGHT=Set the height of items
TVM_SETSCROLLTIME=Set the maximum scroll time
TVM_SETTEXTCOLOR=Set the text color
TVM_SETTOOLTIPS=Set the child tooltip control
TVM_SETUNICODEFORMAT=Set the UNICODE character format flag (Mapped to CCM_SETUNICODEFORMAT)
TVM_SORTCHILDREN=Sort child items of parent
TVM_SORTCHILDRENCB=Sort child items of parent via callback

UDM_GETACCEL=Retrieve acceleration information
UDM_GETBASE=Retrieve current radix base
UDM_GETBUDDY=Retrieve handle to current buddy window
UDM_GETPOS=Retrieve current position
UDM_GETRANGE=Retrieve range
UDM_GETRANGE32=Retrieve 32-bit range
UDM_GETUNICODEFORMAT=Return UNICODE character format flag (Mapped to CCM_GETUNICODEFORMAT)
UDM_SETACCEL=Set acceleration
UDM_SETBASE=Set radix base for buddy window display
UDM_SETBUDDY=Set buddy window
UDM_SETPOS=Set current position
UDM_SETRANGE=Set range
UDM_SETRANGE32=Set 32-bit range
UDM_SETUNICODEFORMAT=Set UNICODE character format flag (Mapped to CCM_SETUNICODEFORMAT)

EM_GETSCROLLPOS=Obtains the current scroll position of the edit control.`n`nwParam:  This parameter is not used; it must be zero.`n`nlParam:  Pointer to a POINT structure. After calling EM_GETSCROLLPOS, this parameters contains a point in the virtual text space of the document, expressed in pixels. This point will be the point that is currently located in the upper-left corner of the edit control window.`n`nReturn value:  This message always returns 1.`n`nRemarks:`nThe values returned in the POINT structure are 16-bit values (even in the 32-bit wide fields).
EM_GETTEXTEX=Gets the text from a rich edit control.`n`nwParam:  Pointer to a GETTEXTEX structure, which indicates how to translate the text before putting it into the output buffer.`n`nlParam:  Pointer to the buffer to receive the text. The size of this buffer, in bytes, is specified by the cb member of the GETTEXTEX structure. Use the EM_GETTEXTLENGTHEX message to get the required size of the buffer.`n`nReturn value:  The return value is the number of TCHARs copied into the output buffer, including the null terminator.`n`nRemarks:  If the size of the output buffer is less than the size of the text in the control, the edit control will copy text from its beginning and place it in the buffer until the buffer is full. A terminating null character will still be placed at the end of the buffer.`n`n
If ANSI text is requested, EM_GETTEXTEX uses the WideCharToMultiByte function to translate the Unicode characters to ANSI. It allows you to go from Unicode to ANSI using a particular code page. The GETTEXTEX structure contains members (lpDefaultChar and lpUsedDefChar) that are used in the translation from Unicode to ANSI.

